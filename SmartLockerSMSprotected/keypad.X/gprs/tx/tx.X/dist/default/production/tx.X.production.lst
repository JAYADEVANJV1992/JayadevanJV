

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 09 12:23:33 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	strings,global,class=STRING,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 1.45
    39                           ; Generated 16/11/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192                           
   193                           	psect	idataBANK0
   194  0427                     __pidataBANK0:	
   195                           
   196                           ;initializer for _a2
   197  0427  3430               	retlw	48
   198  0428  3430               	retlw	48
   199  0429  3431               	retlw	49
   200  042A  3433               	retlw	51
   201  042B  3439               	retlw	57
   202  042C  3434               	retlw	52
   203  042D  3437               	retlw	55
   204  042E  3430               	retlw	48
   205  042F  3435               	retlw	53
   206  0430  3436               	retlw	54
   207  0431  3400               	retlw	0
   208                           
   209                           ;initializer for _a1
   210  0432  3430               	retlw	48
   211  0433  3430               	retlw	48
   212  0434  3430               	retlw	48
   213  0435  3431               	retlw	49
   214  0436  3435               	retlw	53
   215  0437  3433               	retlw	51
   216  0438  3431               	retlw	49
   217  0439  3434               	retlw	52
   218  043A  3435               	retlw	53
   219  043B  3439               	retlw	57
   220  043C  3400               	retlw	0
   221                           
   222                           ;initializer for _mode_text
   223  043D  3441               	retlw	65
   224  043E  3454               	retlw	84
   225  043F  342B               	retlw	43
   226  0440  3443               	retlw	67
   227  0441  344D               	retlw	77
   228  0442  3447               	retlw	71
   229  0443  3446               	retlw	70
   230  0444  343D               	retlw	61
   231  0445  3431               	retlw	49
   232  0446  3400               	retlw	0
   233                           
   234                           ;initializer for _noecho
   235  0447  3441               	retlw	65
   236  0448  3454               	retlw	84
   237  0449  3445               	retlw	69
   238  044A  3430               	retlw	48
   239  044B  3400               	retlw	0
   240                           
   241                           ;initializer for _AT
   242  044C  3441               	retlw	65
   243  044D  3454               	retlw	84
   244  044E  3400               	retlw	0
   245                           
   246                           	psect	idataBANK1
   247  04EF                     __pidataBANK1:	
   248                           
   249                           ;initializer for _a4
   250  04EF  3430               	retlw	48
   251  04F0  3430               	retlw	48
   252  04F1  3430               	retlw	48
   253  04F2  3431               	retlw	49
   254  04F3  3434               	retlw	52
   255  04F4  3439               	retlw	57
   256  04F5  3435               	retlw	53
   257  04F6  3436               	retlw	54
   258  04F7  3438               	retlw	56
   259  04F8  3432               	retlw	50
   260  04F9  3400               	retlw	0
   261                           
   262                           ;initializer for _a3
   263  04FA  3430               	retlw	48
   264  04FB  3430               	retlw	48
   265  04FC  3430               	retlw	48
   266  04FD  3431               	retlw	49
   267  04FE  3435               	retlw	53
   268  04FF  3430               	retlw	48
   269  0500  3432               	retlw	50
   270  0501  3431               	retlw	49
   271  0502  3439               	retlw	57
   272  0503  3432               	retlw	50
   273  0504  3400               	retlw	0
   274                           
   275                           	psect	idataBANK3
   276  0498                     __pidataBANK3:	
   277                           
   278                           ;initializer for _param
   279  0498  3441               	retlw	65
   280  0499  3454               	retlw	84
   281  049A  342B               	retlw	43
   282  049B  3443               	retlw	67
   283  049C  3453               	retlw	83
   284  049D  344D               	retlw	77
   285  049E  3450               	retlw	80
   286  049F  343D               	retlw	61
   287  04A0  3431               	retlw	49
   288  04A1  3437               	retlw	55
   289  04A2  342C               	retlw	44
   290  04A3  3431               	retlw	49
   291  04A4  3436               	retlw	54
   292  04A5  3437               	retlw	55
   293  04A6  342C               	retlw	44
   294  04A7  3430               	retlw	48
   295  04A8  342C               	retlw	44
   296  04A9  3430               	retlw	48
   297  04AA  3400               	retlw	0
   298                           
   299                           ;initializer for _char_mode
   300  04AB  3441               	retlw	65
   301  04AC  3454               	retlw	84
   302  04AD  342B               	retlw	43
   303  04AE  3443               	retlw	67
   304  04AF  3453               	retlw	83
   305  04B0  3443               	retlw	67
   306  04B1  3453               	retlw	83
   307  04B2  343D               	retlw	61
   308  04B3  3422               	retlw	34
   309  04B4  3447               	retlw	71
   310  04B5  3453               	retlw	83
   311  04B6  344D               	retlw	77
   312  04B7  3422               	retlw	34
   313  04B8  340D               	retlw	13
   314  04B9  3400               	retlw	0
   315  0008                     _PORTD	set	8
   316  001E                     _ADRESH	set	30
   317  001F                     _ADCON0	set	31
   318  001A                     _RCREG	set	26
   319  0019                     _TXREG	set	25
   320  0018                     _RCSTA	set	24
   321  005E                     _PEIE	set	94
   322  005F                     _GIE	set	95
   323  00C1                     _OERR	set	193
   324  00FA                     _GO_nDONE	set	250
   325  0065                     _RCIF	set	101
   326  0031                     _RB1	set	49
   327  0032                     _RB2	set	50
   328  00C6                     _RX9	set	198
   329  00C4                     _CREN	set	196
   330  00C7                     _SPEN	set	199
   331  0040                     _RD0	set	64
   332  0042                     _RD2	set	66
   333  0041                     _RD1	set	65
   334  0047                     _RD7	set	71
   335  0046                     _RD6	set	70
   336  0045                     _RD5	set	69
   337  0044                     _RD4	set	68
   338  0088                     _TRISD	set	136
   339  009E                     _ADRESL	set	158
   340  009F                     _ADCON1	set	159
   341  0099                     _SPBRG	set	153
   342  0098                     _TXSTA	set	152
   343  0465                     _RCIE	set	1125
   344  0432                     _TRISB2	set	1074
   345  0431                     _TRISB1	set	1073
   346  04C1                     _TRMT	set	1217
   347  04C6                     _TX9	set	1222
   348  04C4                     _SYNC	set	1220
   349  04C5                     _TXEN	set	1221
   350  04C2                     _BRGH	set	1218
   351  043E                     _TRISC6	set	1086
   352  043F                     _TRISC7	set	1087
   353                           
   354                           	psect	strings
   355  0300                     __pstrings:	
   356  0300                     stringtab:	
   357  0300                     __stringtab:	
   358                           
   359                           ;	String table - string pointers are 1 byte each
   360  0300  1BFF               	btfsc	btemp+1,7
   361  0301  2B0A               	ljmp	stringcode
   362  0302  1383               	bcf	3,7
   363  0303  187F               	btfsc	btemp+1,0
   364  0304  1783               	bsf	3,7
   365  0305  0800               	movf	0,w
   366  0306  0A84               	incf	4,f
   367  0307  1903               	skipnz
   368  0308  0AFF               	incf	btemp+1,f
   369  0309  0008               	return
   370  030A                     stringcode:	
   371  030A                     stringdir:	
   372  030A  3003               	movlw	high stringdir
   373  030B  008A               	movwf	10
   374  030C  0804               	movf	4,w
   375  030D  0A84               	incf	4,f
   376  030E  0782               	addwf	2,f
   377  030F                     __stringbase:	
   378  030F  3400               	retlw	0
   379  0310                     __end_of__stringtab:	
   380  0310                     STR_18:	
   381  0310  3453               	retlw	83	;'S'
   382  0311  3468               	retlw	104	;'h'
   383  0312  346F               	retlw	111	;'o'
   384  0313  3477               	retlw	119	;'w'
   385  0314  3420               	retlw	32	;' '
   386  0315  3479               	retlw	121	;'y'
   387  0316  346F               	retlw	111	;'o'
   388  0317  3475               	retlw	117	;'u'
   389  0318  3472               	retlw	114	;'r'
   390  0319  3420               	retlw	32	;' '
   391  031A  3463               	retlw	99	;'c'
   392  031B  3461               	retlw	97	;'a'
   393  031C  3472               	retlw	114	;'r'
   394  031D  3464               	retlw	100	;'d'
   395  031E  3400               	retlw	0
   396  031F                     STR_7:	
   397  031F  344C               	retlw	76	;'L'
   398  0320  346F               	retlw	111	;'o'
   399  0321  3463               	retlw	99	;'c'
   400  0322  3461               	retlw	97	;'a'
   401  0323  3474               	retlw	116	;'t'
   402  0324  3469               	retlw	105	;'i'
   403  0325  346F               	retlw	111	;'o'
   404  0326  346E               	retlw	110	;'n'
   405  0327  343A               	retlw	58	;':'
   406  0328  340A               	retlw	10
   407  0329  340D               	retlw	13
   408  032A  3400               	retlw	0
   409  032B                     STR_1:	
   410  032B  3441               	retlw	65	;'A'
   411  032C  3454               	retlw	84	;'T'
   412  032D  342B               	retlw	43	;'+'
   413  032E  3443               	retlw	67	;'C'
   414  032F  344D               	retlw	77	;'M'
   415  0330  3447               	retlw	71	;'G'
   416  0331  3453               	retlw	83	;'S'
   417  0332  343D               	retlw	61	;'='
   418  0333  3422               	retlw	34	;'"'
   419  0334  3400               	retlw	0
   420  0335                     STR_17:	
   421  0335  3420               	retlw	32	;' '
   422  0336  3457               	retlw	87	;'W'
   423  0337  3445               	retlw	69	;'E'
   424  0338  344C               	retlw	76	;'L'
   425  0339  3443               	retlw	67	;'C'
   426  033A  344F               	retlw	79	;'O'
   427  033B  344D               	retlw	77	;'M'
   428  033C  3445               	retlw	69	;'E'
   429  033D  3400               	retlw	0
   430  033E                     STR_23:	
   431  033E  3449               	retlw	73	;'I'
   432  033F  346E               	retlw	110	;'n'
   433  0340  3476               	retlw	118	;'v'
   434  0341  3461               	retlw	97	;'a'
   435  0342  346C               	retlw	108	;'l'
   436  0343  3469               	retlw	105	;'i'
   437  0344  3464               	retlw	100	;'d'
   438  0345  3400               	retlw	0
   439  0346                     STR_20:	
   440  0346  3453               	retlw	83	;'S'
   441  0347  3449               	retlw	73	;'I'
   442  0348  3456               	retlw	86	;'V'
   443  0349  3441               	retlw	65	;'A'
   444  034A  3400               	retlw	0
   445  034B                     STR_19:	
   446  034B  3452               	retlw	82	;'R'
   447  034C  3441               	retlw	65	;'A'
   448  034D  3447               	retlw	71	;'G'
   449  034E  3455               	retlw	85	;'U'
   450  034F  3400               	retlw	0
   451  0350                     STR_22:	
   452  0350  344B               	retlw	75	;'K'
   453  0351  3441               	retlw	65	;'A'
   454  0352  3452               	retlw	82	;'R'
   455  0353  3455               	retlw	85	;'U'
   456  0354  3400               	retlw	0
   457  0355                     STR_21:	
   458  0355  3452               	retlw	82	;'R'
   459  0356  3441               	retlw	65	;'A'
   460  0357  344A               	retlw	74	;'J'
   461  0358  3400               	retlw	0
   462  031F                     
   463                           ; #config settings
   464  0000                     
   465                           	psect	cinit
   466  0015                     start_initialization:	
   467  0015                     __initialization:	
   468                           
   469                           ; Initialize objects allocated to BANK3
   470  0015  1783               	bsf	3,7	;select IRP bank2
   471  0016  30B2               	movlw	low (__pdataBANK3+34)
   472  0017  00FD               	movwf	btemp+-1
   473  0018  3004               	movlw	high __pidataBANK3
   474  0019  00FE               	movwf	btemp
   475  001A  3098               	movlw	low __pidataBANK3
   476  001B  00FF               	movwf	btemp+1
   477  001C  3090               	movlw	low __pdataBANK3
   478  001D  0084               	movwf	4
   479  001E  120A  118A  251C  120A  118A  	fcall	init_ram0
   480                           
   481                           ; Initialize objects allocated to BANK1
   482  0023  1383               	bcf	3,7	;select IRP bank0
   483  0024  30E4               	movlw	low (__pdataBANK1+22)
   484  0025  00FD               	movwf	btemp+-1
   485  0026  3004               	movlw	high __pidataBANK1
   486  0027  00FE               	movwf	btemp
   487  0028  30EF               	movlw	low __pidataBANK1
   488  0029  00FF               	movwf	btemp+1
   489  002A  30CE               	movlw	low __pdataBANK1
   490  002B  0084               	movwf	4
   491  002C  120A  118A  251C  120A  118A  	fcall	init_ram0
   492                           
   493                           ; Initialize objects allocated to BANK0
   494  0031  3048               	movlw	low (__pdataBANK0+40)
   495  0032  00FD               	movwf	btemp+-1
   496  0033  3004               	movlw	high __pidataBANK0
   497  0034  00FE               	movwf	btemp
   498  0035  3027               	movlw	low __pidataBANK0
   499  0036  00FF               	movwf	btemp+1
   500  0037  3020               	movlw	low __pdataBANK0
   501  0038  0084               	movwf	4
   502  0039  120A  118A  251C  120A  118A  	fcall	init_ram0
   503                           
   504                           ; Clear objects allocated to BANK3
   505  003E  1783               	bsf	3,7	;select IRP bank2
   506  003F  30B2               	movlw	low __pbssBANK3
   507  0040  0084               	movwf	4
   508  0041  30D0               	movlw	low (__pbssBANK3+30)
   509  0042  120A  118A  2534  120A  118A  	fcall	clear_ram0
   510                           
   511                           ; Clear objects allocated to BANK1
   512  0047  1383               	bcf	3,7	;select IRP bank0
   513  0048  30A0               	movlw	low __pbssBANK1
   514  0049  0084               	movwf	4
   515  004A  30CE               	movlw	low (__pbssBANK1+46)
   516  004B  120A  118A  2534  120A  118A  	fcall	clear_ram0
   517                           
   518                           ; Clear objects allocated to BANK0
   519  0050  3048               	movlw	low __pbssBANK0
   520  0051  0084               	movwf	4
   521  0052  3060               	movlw	low (__pbssBANK0+24)
   522  0053  120A  118A  2534   	fcall	clear_ram0
   523                           
   524                           ; Clear objects allocated to COMMON
   525  0056  01F0               	clrf	__pbssCOMMON& (0+127)
   526  0057  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   527  0058  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   528  0059  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   529  005A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   530  005B                     end_of_initialization:	
   531                           ;End of C runtime variable initialization code
   532                           
   533  005B                     __end_of__initialization:	
   534  005B  0183               	clrf	3
   535  005C  120A  118A  285F   	ljmp	_main	;jump to C main() function
   536                           
   537                           	psect	bssCOMMON
   538  0070                     __pbssCOMMON:	
   539  0070                     _j:	
   540  0070                     	ds	2
   541  0072                     _i:	
   542  0072                     	ds	1
   543  0073                     _rgps:	
   544  0073                     	ds	1
   545  0074                     _a:	
   546  0074                     	ds	1
   547                           
   548                           	psect	bssBANK0
   549  0048                     __pbssBANK0:	
   550  0048                     _rfid:	
   551  0048                     	ds	13
   552  0055                     _n:	
   553  0055                     	ds	7
   554  005C                     _k:	
   555  005C                     	ds	2
   556  005E                     _gps_flag:	
   557  005E                     	ds	2
   558                           
   559                           	psect	dataBANK0
   560  0020                     __pdataBANK0:	
   561  0020                     _a2:	
   562  0020                     	ds	11
   563  002B                     _a1:	
   564  002B                     	ds	11
   565  0036                     _mode_text:	
   566  0036                     	ds	10
   567  0040                     _noecho:	
   568  0040                     	ds	5
   569  0045                     _AT:	
   570  0045                     	ds	3
   571                           
   572                           	psect	bssBANK1
   573  00A0                     __pbssBANK1:	
   574  00A0                     _lattitude:	
   575  00A0                     	ds	11
   576  00AB                     _gps_data:	
   577  00AB                     	ds	35
   578                           
   579                           	psect	dataBANK1
   580  00CE                     __pdataBANK1:	
   581  00CE                     _a4:	
   582  00CE                     	ds	11
   583  00D9                     _a3:	
   584  00D9                     	ds	11
   585                           
   586                           	psect	bssBANK3
   587  01B2                     __pbssBANK3:	
   588  01B2                     _longitude:	
   589  01B2                     	ds	30
   590                           
   591                           	psect	dataBANK3
   592  0190                     __pdataBANK3:	
   593  0190                     _param:	
   594  0190                     	ds	19
   595  01A3                     _char_mode:	
   596  01A3                     	ds	15
   597                           
   598                           	psect	inittext
   599  0518                     init_fetch0:	
   600                           ;	Called with low address in FSR and high address in W
   601                           
   602  0518  087E               	movf	126,w
   603  0519  008A               	movwf	10
   604  051A  087F               	movf	127,w
   605  051B  0082               	movwf	2
   606  051C                     init_ram0:	
   607                           ;Called with:
   608                           ;	high address of idata address in btemp 
   609                           ;	low address of idata address in btemp+1 
   610                           ;	low address of data in FSR
   611                           ;	high address + 1 of data in btemp-1
   612                           
   613  051C  2518  120A  118A   	fcall	init_fetch0
   614  051F  0080               	movwf	0
   615  0520  0A84               	incf	4,f
   616  0521  0804               	movf	4,w
   617  0522  067D               	xorwf	125,w
   618  0523  1903               	btfsc	3,2
   619  0524  3400               	retlw	0
   620  0525  0AFF               	incf	127,f
   621  0526  1903               	btfsc	3,2
   622  0527  0AFE               	incf	126,f
   623  0528  2D1C               	goto	init_ram0
   624                           
   625                           	psect	clrtext
   626  0534                     clear_ram0:	
   627                           ;	Called with FSR containing the base address, and
   628                           ;	W with the last address+1
   629                           
   630  0534  0064               	clrwdt	;clear the watchdog before getting into this loop
   631  0535                     clrloop0:	
   632  0535  0180               	clrf	0	;clear RAM location pointed to by FSR
   633  0536  0A84               	incf	4,f	;increment pointer
   634  0537  0604               	xorwf	4,w	;XOR with final address
   635  0538  1903               	btfsc	3,2	;have we reached the end yet?
   636  0539  3400               	retlw	0	;all done for this memory range, return
   637  053A  0604               	xorwf	4,w	;XOR again to restore value
   638  053B  2D35               	goto	clrloop0	;do the next byte
   639                           
   640                           	psect	cstackBANK1
   641  00E4                     __pcstackBANK1:	
   642  00E4                     ??_main:	
   643                           
   644                           ; 1 bytes @ 0x0
   645  00E4                     	ds	3
   646                           
   647                           	psect	cstackCOMMON
   648  0075                     __pcstackCOMMON:	
   649  0075                     ?_Lcd_Port:	
   650  0075                     ?_Lcd_Cmd:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0075                     ?_Lcd_Init:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0075                     ?_Lcd_Write_Char:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0075                     ?_Lcd_Write_String:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0075                     ?_UART1_Init:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0075                     ?_UART1_Write:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0075                     ?_UART1_Data_Ready:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0075                     ??_UART1_Data_Ready:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0075                     ?_UART1_Read:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0075                     ??_UART1_Read:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0075                     ?_main:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0075                     ?_ISR:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0075                     ??_ISR:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0075                     ?_Lcd_Clear:	
   690                           ; 1 bytes @ 0x0
   691                           
   692                           
   693                           ; 2 bytes @ 0x0
   694  0075                     	ds	5
   695                           
   696                           	psect	cstackBANK0
   697  0060                     __pcstackBANK0:	
   698  0060                     ??_Lcd_Port:	
   699  0060                     ??_UART1_Init:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0060                     ??_UART1_Write:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0060                     Lcd_Port@a:	
   706                           ; 1 bytes @ 0x0
   707                           
   708                           
   709                           ; 1 bytes @ 0x0
   710  0060                     	ds	1
   711  0061                     ??_Lcd_Cmd:	
   712  0061                     ??_Lcd_Write_Char:	
   713                           ; 1 bytes @ 0x1
   714                           
   715  0061                     UART1_Write@data:	
   716                           ; 1 bytes @ 0x1
   717                           
   718                           
   719                           ; 1 bytes @ 0x1
   720  0061                     	ds	1
   721  0062                     Lcd_Write_Char@temp:	
   722                           
   723                           ; 1 bytes @ 0x2
   724  0062                     	ds	1
   725  0063                     Lcd_Cmd@a:	
   726  0063                     Lcd_Write_Char@y:	
   727                           ; 1 bytes @ 0x3
   728                           
   729                           
   730                           ; 1 bytes @ 0x3
   731  0063                     	ds	1
   732  0064                     ??_Lcd_Clear:	
   733  0064                     ?_Lcd_Set_Cursor:	
   734                           ; 1 bytes @ 0x4
   735                           
   736  0064                     ??_Lcd_Init:	
   737                           ; 1 bytes @ 0x4
   738                           
   739  0064                     Lcd_Set_Cursor@b:	
   740                           ; 1 bytes @ 0x4
   741                           
   742  0064                     Lcd_Write_Char@a:	
   743                           ; 1 bytes @ 0x4
   744                           
   745                           
   746                           ; 1 bytes @ 0x4
   747  0064                     	ds	1
   748  0065                     ??_Lcd_Set_Cursor:	
   749  0065                     ??_Lcd_Write_String:	
   750                           ; 1 bytes @ 0x5
   751                           
   752  0065                     ?_Lcd_String:	
   753                           ; 1 bytes @ 0x5
   754                           
   755  0065                     Lcd_String@b:	
   756                           ; 1 bytes @ 0x5
   757                           
   758  0065                     Lcd_Write_String@i:	
   759                           ; 1 bytes @ 0x5
   760                           
   761                           
   762                           ; 2 bytes @ 0x5
   763  0065                     	ds	1
   764  0066                     Lcd_String@c:	
   765                           
   766                           ; 1 bytes @ 0x6
   767  0066                     	ds	1
   768  0067                     ??_Lcd_String:	
   769  0067                     Lcd_Set_Cursor@a:	
   770                           ; 1 bytes @ 0x7
   771                           
   772  0067                     Lcd_Write_String@a:	
   773                           ; 1 bytes @ 0x7
   774                           
   775                           
   776                           ; 1 bytes @ 0x7
   777  0067                     	ds	1
   778  0068                     Lcd_Set_Cursor@z:	
   779                           
   780                           ; 1 bytes @ 0x8
   781  0068                     	ds	1
   782  0069                     Lcd_Set_Cursor@y:	
   783  0069                     Lcd_String@a:	
   784                           ; 1 bytes @ 0x9
   785                           
   786                           
   787                           ; 1 bytes @ 0x9
   788  0069                     	ds	1
   789  006A                     Lcd_Set_Cursor@temp:	
   790  006A                     Lcd_String@i:	
   791                           ; 1 bytes @ 0xA
   792                           
   793                           
   794                           ; 2 bytes @ 0xA
   795  006A                     	ds	2
   796  006C                     Lcd_String@z:	
   797                           
   798                           ; 1 bytes @ 0xC
   799  006C                     	ds	1
   800  006D                     Lcd_String@y:	
   801                           
   802                           ; 1 bytes @ 0xD
   803  006D                     	ds	1
   804  006E                     Lcd_String@temp:	
   805                           
   806                           ; 1 bytes @ 0xE
   807  006E                     	ds	1
   808                           
   809                           	psect	maintext
   810  005F                     __pmaintext:	
   811 ;;
   812 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   813 ;;
   814 ;; *************** function _main *****************
   815 ;; Defined at:
   816 ;;		line 28 in file "tx.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : B00/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0
   832 ;;      Temps:          0       0       3       0       0
   833 ;;      Totals:         0       0       3       0       0
   834 ;;Total ram usage:        3 bytes
   835 ;; Hardware stack levels required when called:    5
   836 ;; This function calls:
   837 ;;		_Lcd_Clear
   838 ;;		_Lcd_Init
   839 ;;		_Lcd_Set_Cursor
   840 ;;		_Lcd_String
   841 ;;		_Lcd_Write_String
   842 ;;		_UART1_Init
   843 ;;		_UART1_Write
   844 ;; This function is called by:
   845 ;;		Startup code after reset
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           
   850                           ;psect for function _main
   851  005F                     _main:	
   852                           
   853                           ;tx.c: 31: TRISD=0X00;
   854                           
   855                           ;incstack = 0
   856                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   857  005F  1683               	bsf	3,5	;RP0=1, select bank1
   858  0060  1303               	bcf	3,6	;RP1=0, select bank1
   859  0061  0188               	clrf	8	;volatile
   860                           
   861                           ;tx.c: 33: PORTD=0X00;
   862  0062  1283               	bcf	3,5	;RP0=0, select bank0
   863  0063  1303               	bcf	3,6	;RP1=0, select bank0
   864  0064  0188               	clrf	8	;volatile
   865                           
   866                           ;tx.c: 34: GIE = 1;
   867  0065  178B               	bsf	11,7	;volatile
   868                           
   869                           ;tx.c: 35: PEIE=1;
   870  0066  170B               	bsf	11,6	;volatile
   871                           
   872                           ;tx.c: 37: RCIE=1;
   873  0067  1683               	bsf	3,5	;RP0=1, select bank1
   874  0068  1303               	bcf	3,6	;RP1=0, select bank1
   875  0069  168C               	bsf	12,5	;volatile
   876                           
   877                           ;tx.c: 38: RCIF=0;
   878  006A  1283               	bcf	3,5	;RP0=0, select bank0
   879  006B  1303               	bcf	3,6	;RP1=0, select bank0
   880  006C  128C               	bcf	12,5	;volatile
   881                           
   882                           ;tx.c: 40: UART1_Init();
   883  006D  120A  118A  2475  120A  118A  	fcall	_UART1_Init
   884                           
   885                           ;tx.c: 42: Lcd_Init();
   886  0072  120A  118A  224A  120A  118A  	fcall	_Lcd_Init
   887                           
   888                           ;tx.c: 44: Lcd_Clear();
   889  0077  120A  118A  2529  120A  118A  	fcall	_Lcd_Clear
   890                           
   891                           ;tx.c: 47: Lcd_String(1,4," WELCOME");
   892  007C  3004               	movlw	4
   893  007D  1683               	bsf	3,5	;RP0=1, select bank1
   894  007E  1303               	bcf	3,6	;RP1=0, select bank1
   895  007F  00E4               	movwf	??_main^(0+128)
   896  0080  0864               	movf	??_main^(0+128),w
   897  0081  1283               	bcf	3,5	;RP0=0, select bank0
   898  0082  1303               	bcf	3,6	;RP1=0, select bank0
   899  0083  00E5               	movwf	Lcd_String@b
   900  0084  3026               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
   901  0085  1683               	bsf	3,5	;RP0=1, select bank1
   902  0086  1303               	bcf	3,6	;RP1=0, select bank1
   903  0087  00E5               	movwf	(??_main+1)^(0+128)
   904  0088  0865               	movf	(??_main+1)^(0+128),w
   905  0089  1283               	bcf	3,5	;RP0=0, select bank0
   906  008A  1303               	bcf	3,6	;RP1=0, select bank0
   907  008B  00E6               	movwf	Lcd_String@c
   908  008C  3001               	movlw	1
   909  008D  120A  118A  21E7  120A  118A  	fcall	_Lcd_String
   910                           
   911                           ;tx.c: 48: _delay((unsigned long)((2000)*(20000000/4000.0)));
   912  0092  3033               	movlw	51
   913  0093  1683               	bsf	3,5	;RP0=1, select bank1
   914  0094  1303               	bcf	3,6	;RP1=0, select bank1
   915  0095  00E6               	movwf	(??_main^(0+128)+2)
   916  0096  30BB               	movlw	187
   917  0097  00E5               	movwf	(??_main^(0+128)+1)
   918  0098  30DF               	movlw	223
   919  0099  00E4               	movwf	??_main^(0+128)
   920  009A                     u2567:	
   921  009A  0BE4               	decfsz	??_main^(0+128),f
   922  009B  289A               	goto	u2567
   923  009C  0BE5               	decfsz	(??_main^(0+128)+1),f
   924  009D  289A               	goto	u2567
   925  009E  0BE6               	decfsz	(??_main^(0+128)+2),f
   926  009F  289A               	goto	u2567
   927                           
   928                           ;tx.c: 49: rfid[12] = '\0';
   929  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   930  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   931  00A2  01D4               	clrf	_rfid+12
   932  00A3                     l3064:	
   933                           ;tx.c: 50: while(1)
   934                           
   935                           
   936                           ;tx.c: 51: {
   937                           ;tx.c: 53: Lcd_Clear();
   938  00A3  120A  118A  2529  120A  118A  	fcall	_Lcd_Clear
   939                           
   940                           ;tx.c: 54: Lcd_String(1,1,"Show your card");
   941  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   942  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   943  00AA  01E5               	clrf	Lcd_String@b
   944  00AB  0AE5               	incf	Lcd_String@b,f
   945  00AC  3001               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
   946  00AD  1683               	bsf	3,5	;RP0=1, select bank1
   947  00AE  1303               	bcf	3,6	;RP1=0, select bank1
   948  00AF  00E4               	movwf	??_main^(0+128)
   949  00B0  0864               	movf	??_main^(0+128),w
   950  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   951  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   952  00B3  00E6               	movwf	Lcd_String@c
   953  00B4  3001               	movlw	1
   954  00B5  120A  118A  21E7  120A  118A  	fcall	_Lcd_String
   955                           
   956                           ;tx.c: 55: _delay((unsigned long)((200)*(20000000/4000.0)));
   957  00BA  3006               	movlw	6
   958  00BB  1683               	bsf	3,5	;RP0=1, select bank1
   959  00BC  1303               	bcf	3,6	;RP1=0, select bank1
   960  00BD  00E6               	movwf	(??_main^(0+128)+2)
   961  00BE  3013               	movlw	19
   962  00BF  00E5               	movwf	(??_main^(0+128)+1)
   963  00C0  30AD               	movlw	173
   964  00C1  00E4               	movwf	??_main^(0+128)
   965  00C2                     u2577:	
   966  00C2  0BE4               	decfsz	??_main^(0+128),f
   967  00C3  28C2               	goto	u2577
   968  00C4  0BE5               	decfsz	(??_main^(0+128)+1),f
   969  00C5  28C2               	goto	u2577
   970  00C6  0BE6               	decfsz	(??_main^(0+128)+2),f
   971  00C7  28C2               	goto	u2577
   972                           
   973                           ;tx.c: 56: if(k==1)
   974  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   975  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   976  00CA  035C               	decf	_k,w
   977  00CB  045D               	iorwf	_k+1,w
   978  00CC  1D03               	btfss	3,2
   979  00CD  28A3               	goto	l3064
   980                           
   981                           ;tx.c: 57: {
   982                           ;tx.c: 58: k=0;
   983  00CE  01DC               	clrf	_k
   984  00CF  01DD               	clrf	_k+1
   985                           
   986                           ;tx.c: 59: if(rfid[7]==a1[7]&&rfid[9]==a1[9]&&rfid[8]==a1[8])
   987  00D0  084F               	movf	_rfid+7,w
   988  00D1  0632               	xorwf	_a1+7,w
   989  00D2  1D03               	skipz
   990  00D3  2907               	goto	l3090
   991  00D4  0851               	movf	_rfid+9,w
   992  00D5  0634               	xorwf	_a1+9,w
   993  00D6  1D03               	skipz
   994  00D7  2907               	goto	l3090
   995  00D8  0850               	movf	_rfid+8,w
   996  00D9  0633               	xorwf	_a1+8,w
   997  00DA  1D03               	skipz
   998  00DB  2907               	goto	l3090
   999                           
  1000                           ;tx.c: 60: {
  1001                           ;tx.c: 61: rfid[0]='\0';
  1002  00DC  01C8               	clrf	_rfid
  1003                           
  1004                           ;tx.c: 62: Lcd_Clear();
  1005  00DD  120A  118A  2529  120A  118A  	fcall	_Lcd_Clear
  1006                           
  1007                           ;tx.c: 63: Lcd_Set_Cursor(2,1);
  1008  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1009  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1010  00E4  01E4               	clrf	Lcd_Set_Cursor@b
  1011  00E5  0AE4               	incf	Lcd_Set_Cursor@b,f
  1012  00E6  3002               	movlw	2
  1013  00E7  120A  118A  2359  120A  118A  	fcall	_Lcd_Set_Cursor
  1014                           
  1015                           ;tx.c: 64: Lcd_Write_String("RAGU");
  1016  00EC  303C               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  1017  00ED  120A  118A  244F  120A  118A  	fcall	_Lcd_Write_String
  1018                           
  1019                           ;tx.c: 65: UART1_Write('1');
  1020  00F2  3031               	movlw	49
  1021  00F3  120A  118A  2505  120A  118A  	fcall	_UART1_Write
  1022                           
  1023                           ;tx.c: 67: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1024  00F8  3033               	movlw	51
  1025  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  1026  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  1027  00FB  00E6               	movwf	(??_main^(0+128)+2)
  1028  00FC  30BB               	movlw	187
  1029  00FD  00E5               	movwf	(??_main^(0+128)+1)
  1030  00FE  30DF               	movlw	223
  1031  00FF  00E4               	movwf	??_main^(0+128)
  1032  0100                     u2587:	
  1033  0100  0BE4               	decfsz	??_main^(0+128),f
  1034  0101  2900               	goto	u2587
  1035  0102  0BE5               	decfsz	(??_main^(0+128)+1),f
  1036  0103  2900               	goto	u2587
  1037  0104  0BE6               	decfsz	(??_main^(0+128)+2),f
  1038  0105  2900               	goto	u2587
  1039                           
  1040                           ;tx.c: 70: }
  1041  0106  28A3               	goto	l3064
  1042  0107                     l3090:	
  1043                           
  1044                           ;tx.c: 71: else if(rfid[7]==a2[7]&&rfid[9]==a2[9]&&rfid[8]==a2[8])
  1045  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1046  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1047  0109  084F               	movf	_rfid+7,w
  1048  010A  0627               	xorwf	_a2+7,w
  1049  010B  1D03               	skipz
  1050  010C  293F               	goto	l3104
  1051  010D  0851               	movf	_rfid+9,w
  1052  010E  0629               	xorwf	_a2+9,w
  1053  010F  1D03               	skipz
  1054  0110  293F               	goto	l3104
  1055  0111  0850               	movf	_rfid+8,w
  1056  0112  0628               	xorwf	_a2+8,w
  1057  0113  1D03               	skipz
  1058  0114  293F               	goto	l3104
  1059                           
  1060                           ;tx.c: 72: {
  1061                           ;tx.c: 73: Lcd_Clear();
  1062  0115  120A  118A  2529  120A  118A  	fcall	_Lcd_Clear
  1063                           
  1064                           ;tx.c: 74: Lcd_Set_Cursor(2,1);
  1065  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1066  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1067  011C  01E4               	clrf	Lcd_Set_Cursor@b
  1068  011D  0AE4               	incf	Lcd_Set_Cursor@b,f
  1069  011E  3002               	movlw	2
  1070  011F  120A  118A  2359  120A  118A  	fcall	_Lcd_Set_Cursor
  1071                           
  1072                           ;tx.c: 75: Lcd_Write_String("SIVA");
  1073  0124  3037               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  1074  0125  120A  118A  244F  120A  118A  	fcall	_Lcd_Write_String
  1075                           
  1076                           ;tx.c: 76: UART1_Write('2');
  1077  012A  3032               	movlw	50
  1078  012B  120A  118A  2505  120A  118A  	fcall	_UART1_Write
  1079                           
  1080                           ;tx.c: 77: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1081  0130  3033               	movlw	51
  1082  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1083  0132  1303               	bcf	3,6	;RP1=0, select bank1
  1084  0133  00E6               	movwf	(??_main^(0+128)+2)
  1085  0134  30BB               	movlw	187
  1086  0135  00E5               	movwf	(??_main^(0+128)+1)
  1087  0136  30DF               	movlw	223
  1088  0137  00E4               	movwf	??_main^(0+128)
  1089  0138                     u2597:	
  1090  0138  0BE4               	decfsz	??_main^(0+128),f
  1091  0139  2938               	goto	u2597
  1092  013A  0BE5               	decfsz	(??_main^(0+128)+1),f
  1093  013B  2938               	goto	u2597
  1094  013C  0BE6               	decfsz	(??_main^(0+128)+2),f
  1095  013D  2938               	goto	u2597
  1096                           
  1097                           ;tx.c: 79: }
  1098  013E  28A3               	goto	l3064
  1099  013F                     l3104:	
  1100                           
  1101                           ;tx.c: 80: else if(rfid[7]==a3[7]&&rfid[9]==a3[9]&&rfid[8]==a3[8])
  1102  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1103  0140  1303               	bcf	3,6	;RP1=0, select bank0
  1104  0141  084F               	movf	_rfid+7,w
  1105  0142  1683               	bsf	3,5	;RP0=1, select bank1
  1106  0143  1303               	bcf	3,6	;RP1=0, select bank1
  1107  0144  0660               	xorwf	(_a3^(0+128)+7),w
  1108  0145  1D03               	skipz
  1109  0146  2981               	goto	l3118
  1110  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0149  0851               	movf	_rfid+9,w
  1113  014A  1683               	bsf	3,5	;RP0=1, select bank1
  1114  014B  1303               	bcf	3,6	;RP1=0, select bank1
  1115  014C  0662               	xorwf	(_a3^(0+128)+9),w
  1116  014D  1D03               	skipz
  1117  014E  2981               	goto	l3118
  1118  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1119  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0151  0850               	movf	_rfid+8,w
  1121  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1122  0153  1303               	bcf	3,6	;RP1=0, select bank1
  1123  0154  0661               	xorwf	(_a3^(0+128)+8),w
  1124  0155  1D03               	skipz
  1125  0156  2981               	goto	l3118
  1126                           
  1127                           ;tx.c: 81: {
  1128                           ;tx.c: 82: Lcd_Clear();
  1129  0157  120A  118A  2529  120A  118A  	fcall	_Lcd_Clear
  1130                           
  1131                           ;tx.c: 83: Lcd_Set_Cursor(2,1);
  1132  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1133  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1134  015E  01E4               	clrf	Lcd_Set_Cursor@b
  1135  015F  0AE4               	incf	Lcd_Set_Cursor@b,f
  1136  0160  3002               	movlw	2
  1137  0161  120A  118A  2359  120A  118A  	fcall	_Lcd_Set_Cursor
  1138                           
  1139                           ;tx.c: 84: Lcd_Write_String("RAJ");
  1140  0166  3046               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  1141  0167  120A  118A  244F  120A  118A  	fcall	_Lcd_Write_String
  1142                           
  1143                           ;tx.c: 85: UART1_Write('3');
  1144  016C  3033               	movlw	51
  1145  016D  120A  118A  2505  120A  118A  	fcall	_UART1_Write
  1146                           
  1147                           ;tx.c: 86: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1148  0172  3033               	movlw	51
  1149  0173  1683               	bsf	3,5	;RP0=1, select bank1
  1150  0174  1303               	bcf	3,6	;RP1=0, select bank1
  1151  0175  00E6               	movwf	(??_main^(0+128)+2)
  1152  0176  30BB               	movlw	187
  1153  0177  00E5               	movwf	(??_main^(0+128)+1)
  1154  0178  30DF               	movlw	223
  1155  0179  00E4               	movwf	??_main^(0+128)
  1156  017A                     u2607:	
  1157  017A  0BE4               	decfsz	??_main^(0+128),f
  1158  017B  297A               	goto	u2607
  1159  017C  0BE5               	decfsz	(??_main^(0+128)+1),f
  1160  017D  297A               	goto	u2607
  1161  017E  0BE6               	decfsz	(??_main^(0+128)+2),f
  1162  017F  297A               	goto	u2607
  1163                           
  1164                           ;tx.c: 87: }
  1165  0180  28A3               	goto	l3064
  1166  0181                     l3118:	
  1167                           
  1168                           ;tx.c: 88: else if(rfid[7]==a4[7]&&rfid[9]==a4[9]&&rfid[8]==a4[8])
  1169  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1170  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1171  0183  084F               	movf	_rfid+7,w
  1172  0184  1683               	bsf	3,5	;RP0=1, select bank1
  1173  0185  1303               	bcf	3,6	;RP1=0, select bank1
  1174  0186  0655               	xorwf	(_a4^(0+128)+7),w
  1175  0187  1D03               	skipz
  1176  0188  29C3               	goto	l3132
  1177  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1178  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1179  018B  0851               	movf	_rfid+9,w
  1180  018C  1683               	bsf	3,5	;RP0=1, select bank1
  1181  018D  1303               	bcf	3,6	;RP1=0, select bank1
  1182  018E  0657               	xorwf	(_a4^(0+128)+9),w
  1183  018F  1D03               	skipz
  1184  0190  29C3               	goto	l3132
  1185  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1186  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1187  0193  0850               	movf	_rfid+8,w
  1188  0194  1683               	bsf	3,5	;RP0=1, select bank1
  1189  0195  1303               	bcf	3,6	;RP1=0, select bank1
  1190  0196  0656               	xorwf	(_a4^(0+128)+8),w
  1191  0197  1D03               	skipz
  1192  0198  29C3               	goto	l3132
  1193                           
  1194                           ;tx.c: 89: {
  1195                           ;tx.c: 90: Lcd_Clear();
  1196  0199  120A  118A  2529  120A  118A  	fcall	_Lcd_Clear
  1197                           
  1198                           ;tx.c: 91: Lcd_Set_Cursor(2,1);
  1199  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1200  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1201  01A0  01E4               	clrf	Lcd_Set_Cursor@b
  1202  01A1  0AE4               	incf	Lcd_Set_Cursor@b,f
  1203  01A2  3002               	movlw	2
  1204  01A3  120A  118A  2359  120A  118A  	fcall	_Lcd_Set_Cursor
  1205                           
  1206                           ;tx.c: 92: Lcd_Write_String("KARU");
  1207  01A8  3041               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
  1208  01A9  120A  118A  244F  120A  118A  	fcall	_Lcd_Write_String
  1209                           
  1210                           ;tx.c: 93: UART1_Write('4');
  1211  01AE  3034               	movlw	52
  1212  01AF  120A  118A  2505  120A  118A  	fcall	_UART1_Write
  1213                           
  1214                           ;tx.c: 94: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1215  01B4  3033               	movlw	51
  1216  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  1217  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  1218  01B7  00E6               	movwf	(??_main^(0+128)+2)
  1219  01B8  30BB               	movlw	187
  1220  01B9  00E5               	movwf	(??_main^(0+128)+1)
  1221  01BA  30DF               	movlw	223
  1222  01BB  00E4               	movwf	??_main^(0+128)
  1223  01BC                     u2617:	
  1224  01BC  0BE4               	decfsz	??_main^(0+128),f
  1225  01BD  29BC               	goto	u2617
  1226  01BE  0BE5               	decfsz	(??_main^(0+128)+1),f
  1227  01BF  29BC               	goto	u2617
  1228  01C0  0BE6               	decfsz	(??_main^(0+128)+2),f
  1229  01C1  29BC               	goto	u2617
  1230                           
  1231                           ;tx.c: 95: }
  1232  01C2  28A3               	goto	l3064
  1233  01C3                     l3132:	
  1234                           
  1235                           ;tx.c: 96: else
  1236                           ;tx.c: 97: {
  1237                           ;tx.c: 99: Lcd_Clear();
  1238  01C3  120A  118A  2529  120A  118A  	fcall	_Lcd_Clear
  1239                           
  1240                           ;tx.c: 100: Lcd_Set_Cursor(1,1);
  1241  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1242  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1243  01CA  01E4               	clrf	Lcd_Set_Cursor@b
  1244  01CB  0AE4               	incf	Lcd_Set_Cursor@b,f
  1245  01CC  3001               	movlw	1
  1246  01CD  120A  118A  2359  120A  118A  	fcall	_Lcd_Set_Cursor
  1247                           
  1248                           ;tx.c: 102: Lcd_Write_String("Invalid");
  1249  01D2  302F               	movlw	(low ((STR_23-__stringbase)| (0+32768)))& (0+255)
  1250  01D3  120A  118A  244F  120A  118A  	fcall	_Lcd_Write_String
  1251                           
  1252                           ;tx.c: 103: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1253  01D8  3033               	movlw	51
  1254  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  1255  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  1256  01DB  00E6               	movwf	(??_main^(0+128)+2)
  1257  01DC  30BB               	movlw	187
  1258  01DD  00E5               	movwf	(??_main^(0+128)+1)
  1259  01DE  30DF               	movlw	223
  1260  01DF  00E4               	movwf	??_main^(0+128)
  1261  01E0                     u2627:	
  1262  01E0  0BE4               	decfsz	??_main^(0+128),f
  1263  01E1  29E0               	goto	u2627
  1264  01E2  0BE5               	decfsz	(??_main^(0+128)+1),f
  1265  01E3  29E0               	goto	u2627
  1266  01E4  0BE6               	decfsz	(??_main^(0+128)+2),f
  1267  01E5  29E0               	goto	u2627
  1268  01E6  28A3               	goto	l3064
  1269  01E7                     __end_of_main:	
  1270                           
  1271                           	psect	text1
  1272  0505                     __ptext1:	
  1273 ;; *************** function _UART1_Write *****************
  1274 ;; Defined at:
  1275 ;;		line 194 in file "pic16f87xa.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  data            1    wreg     unsigned char 
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  data            1    1[BANK0 ] unsigned char 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1289 ;;      Params:         0       0       0       0       0
  1290 ;;      Locals:         0       1       0       0       0
  1291 ;;      Temps:          0       1       0       0       0
  1292 ;;      Totals:         0       2       0       0       0
  1293 ;;Total ram usage:        2 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    2
  1296 ;; This function calls:
  1297 ;;		Nothing
  1298 ;; This function is called by:
  1299 ;;		_main
  1300 ;;		_UART1_Send
  1301 ;;		_GSM1_Init
  1302 ;;		_GSM1_Send
  1303 ;;		_GPS_GSM_Send1
  1304 ;;		_GPS_GSM_Send2
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function _UART1_Write
  1310  0505                     _UART1_Write:	
  1311                           
  1312                           ;incstack = 0
  1313                           ; Regs used in _UART1_Write: [wreg]
  1314                           ;UART1_Write@data stored from wreg
  1315  0505  1283               	bcf	3,5	;RP0=0, select bank0
  1316  0506  1303               	bcf	3,6	;RP1=0, select bank0
  1317  0507  00E1               	movwf	UART1_Write@data
  1318  0508                     l156:	
  1319                           ;pic16f87xa.c: 197: while(!TRMT);
  1320                           
  1321  0508  1683               	bsf	3,5	;RP0=1, select bank1
  1322  0509  1303               	bcf	3,6	;RP1=0, select bank1
  1323  050A  1C98               	btfss	24,1	;volatile
  1324  050B  2D08               	goto	l156
  1325                           
  1326                           ;pic16f87xa.c: 198: TXREG = data;
  1327  050C  1283               	bcf	3,5	;RP0=0, select bank0
  1328  050D  1303               	bcf	3,6	;RP1=0, select bank0
  1329  050E  0861               	movf	UART1_Write@data,w
  1330  050F  0099               	movwf	25	;volatile
  1331                           
  1332                           ;pic16f87xa.c: 199: _delay((unsigned long)((10)*(20000000/4000000.0)));
  1333  0510  300F               	movlw	15
  1334  0511  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0512  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0513  00E0               	movwf	??_UART1_Write
  1337  0514                     u2637:	
  1338  0514  0BE0               	decfsz	??_UART1_Write,f
  1339  0515  2D14               	goto	u2637
  1340  0516  2D17               	nop2
  1341  0517  0008               	return
  1342  0518                     __end_of_UART1_Write:	
  1343                           
  1344                           	psect	text2
  1345  0475                     __ptext2:	
  1346 ;; *************** function _UART1_Init *****************
  1347 ;; Defined at:
  1348 ;;		line 177 in file "pic16f87xa.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1362 ;;      Params:         0       0       0       0       0
  1363 ;;      Locals:         0       0       0       0       0
  1364 ;;      Temps:          0       0       0       0       0
  1365 ;;      Totals:         0       0       0       0       0
  1366 ;;Total ram usage:        0 bytes
  1367 ;; Hardware stack levels used:    1
  1368 ;; Hardware stack levels required when called:    2
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_main
  1373 ;;		_GSM1_Init
  1374 ;;		_GSM1_Send
  1375 ;;		_GPS_GSM_Send1
  1376 ;;		_GPS_GSM_Send2
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           
  1381                           ;psect for function _UART1_Init
  1382  0475                     _UART1_Init:	
  1383                           
  1384                           ;pic16f87xa.c: 180: TRISC7 = 1;
  1385                           
  1386                           ;incstack = 0
  1387                           ; Regs used in _UART1_Init: [wreg]
  1388  0475  1683               	bsf	3,5	;RP0=1, select bank1
  1389  0476  1303               	bcf	3,6	;RP1=0, select bank1
  1390  0477  1787               	bsf	7,7	;volatile
  1391                           
  1392                           ;pic16f87xa.c: 181: TRISC6 = 0;
  1393  0478  1307               	bcf	7,6	;volatile
  1394                           
  1395                           ;pic16f87xa.c: 182: TXSTA=0X24;
  1396  0479  3024               	movlw	36
  1397  047A  0098               	movwf	24	;volatile
  1398                           
  1399                           ;pic16f87xa.c: 183: BRGH=1;
  1400  047B  1518               	bsf	24,2	;volatile
  1401                           
  1402                           ;pic16f87xa.c: 184: RCSTA=0X90;
  1403  047C  3090               	movlw	144
  1404  047D  1283               	bcf	3,5	;RP0=0, select bank0
  1405  047E  1303               	bcf	3,6	;RP1=0, select bank0
  1406  047F  0098               	movwf	24	;volatile
  1407                           
  1408                           ;pic16f87xa.c: 185: TXEN=1;
  1409  0480  1683               	bsf	3,5	;RP0=1, select bank1
  1410  0481  1303               	bcf	3,6	;RP1=0, select bank1
  1411  0482  1698               	bsf	24,5	;volatile
  1412                           
  1413                           ;pic16f87xa.c: 186: SPEN=1;
  1414  0483  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0484  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0485  1798               	bsf	24,7	;volatile
  1417                           
  1418                           ;pic16f87xa.c: 187: SYNC = 0;
  1419  0486  1683               	bsf	3,5	;RP0=1, select bank1
  1420  0487  1303               	bcf	3,6	;RP1=0, select bank1
  1421  0488  1218               	bcf	24,4	;volatile
  1422                           
  1423                           ;pic16f87xa.c: 188: CREN = 1;
  1424  0489  1283               	bcf	3,5	;RP0=0, select bank0
  1425  048A  1303               	bcf	3,6	;RP1=0, select bank0
  1426  048B  1618               	bsf	24,4	;volatile
  1427                           
  1428                           ;pic16f87xa.c: 189: TXEN = 1;
  1429  048C  1683               	bsf	3,5	;RP0=1, select bank1
  1430  048D  1303               	bcf	3,6	;RP1=0, select bank1
  1431  048E  1698               	bsf	24,5	;volatile
  1432                           
  1433                           ;pic16f87xa.c: 190: TX9=0;
  1434  048F  1318               	bcf	24,6	;volatile
  1435                           
  1436                           ;pic16f87xa.c: 191: RX9=0;
  1437  0490  1283               	bcf	3,5	;RP0=0, select bank0
  1438  0491  1303               	bcf	3,6	;RP1=0, select bank0
  1439  0492  1318               	bcf	24,6	;volatile
  1440                           
  1441                           ;pic16f87xa.c: 192: SPBRG=129;
  1442  0493  3081               	movlw	129
  1443  0494  1683               	bsf	3,5	;RP0=1, select bank1
  1444  0495  1303               	bcf	3,6	;RP1=0, select bank1
  1445  0496  0099               	movwf	25	;volatile
  1446  0497  0008               	return
  1447  0498                     __end_of_UART1_Init:	
  1448                           
  1449                           	psect	text3
  1450  044F                     __ptext3:	
  1451 ;; *************** function _Lcd_Write_String *****************
  1452 ;; Defined at:
  1453 ;;		line 136 in file "pic16f87xa.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  a               1    wreg     PTR unsigned char 
  1456 ;;		 -> STR_23(8), STR_22(5), STR_21(4), STR_20(5), 
  1457 ;;		 -> STR_19(5), 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;  a               1    7[BANK0 ] PTR unsigned char 
  1460 ;;		 -> STR_23(8), STR_22(5), STR_21(4), STR_20(5), 
  1461 ;;		 -> STR_19(5), 
  1462 ;;  i               2    5[BANK0 ] int 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1472 ;;      Params:         0       0       0       0       0
  1473 ;;      Locals:         0       3       0       0       0
  1474 ;;      Temps:          0       0       0       0       0
  1475 ;;      Totals:         0       3       0       0       0
  1476 ;;Total ram usage:        3 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:    4
  1479 ;; This function calls:
  1480 ;;		_Lcd_Write_Char
  1481 ;; This function is called by:
  1482 ;;		_main
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           
  1487                           ;psect for function _Lcd_Write_String
  1488  044F                     _Lcd_Write_String:	
  1489                           
  1490                           ;incstack = 0
  1491                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1492                           ;Lcd_Write_String@a stored from wreg
  1493  044F  1283               	bcf	3,5	;RP0=0, select bank0
  1494  0450  1303               	bcf	3,6	;RP1=0, select bank0
  1495  0451  00E7               	movwf	Lcd_Write_String@a
  1496                           
  1497                           ;pic16f87xa.c: 138: int i;
  1498                           ;pic16f87xa.c: 139: for(i=0;a[i]!='\0';i++)
  1499  0452  01E5               	clrf	Lcd_Write_String@i
  1500  0453  01E6               	clrf	Lcd_Write_String@i+1
  1501  0454                     l2590:	
  1502  0454  0865               	movf	Lcd_Write_String@i,w
  1503  0455  0767               	addwf	Lcd_Write_String@a,w
  1504  0456  0084               	movwf	4
  1505  0457  120A  118A  230A  120A  118A  	fcall	stringdir
  1506  045C  3A00               	xorlw	0
  1507  045D  1903               	btfsc	3,2
  1508  045E  0008               	return
  1509                           
  1510                           ;pic16f87xa.c: 140: Lcd_Write_Char(a[i]);
  1511  045F  0865               	movf	Lcd_Write_String@i,w
  1512  0460  0767               	addwf	Lcd_Write_String@a,w
  1513  0461  0084               	movwf	4
  1514  0462  120A  118A  230A  120A  118A  	fcall	stringdir
  1515  0467  120A  118A  23AB  120A  118A  	fcall	_Lcd_Write_Char
  1516  046C  3001               	movlw	1
  1517  046D  1283               	bcf	3,5	;RP0=0, select bank0
  1518  046E  1303               	bcf	3,6	;RP1=0, select bank0
  1519  046F  07E5               	addwf	Lcd_Write_String@i,f
  1520  0470  1803               	skipnc
  1521  0471  0AE6               	incf	Lcd_Write_String@i+1,f
  1522  0472  3000               	movlw	0
  1523  0473  07E6               	addwf	Lcd_Write_String@i+1,f
  1524  0474  2C54               	goto	l2590
  1525  0475                     __end_of_Lcd_Write_String:	
  1526                           
  1527                           	psect	text4
  1528  01E7                     __ptext4:	
  1529 ;; *************** function _Lcd_String *****************
  1530 ;; Defined at:
  1531 ;;		line 142 in file "pic16f87xa.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  a               1    wreg     unsigned char 
  1534 ;;  b               1    5[BANK0 ] unsigned char 
  1535 ;;  c               1    6[BANK0 ] PTR unsigned char 
  1536 ;;		 -> STR_18(15), STR_17(9), 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  a               1    9[BANK0 ] unsigned char 
  1539 ;;  i               2   10[BANK0 ] int 
  1540 ;;  temp            1   14[BANK0 ] unsigned char 
  1541 ;;  y               1   13[BANK0 ] unsigned char 
  1542 ;;  z               1   12[BANK0 ] unsigned char 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1552 ;;      Params:         0       2       0       0       0
  1553 ;;      Locals:         0       6       0       0       0
  1554 ;;      Temps:          0       2       0       0       0
  1555 ;;      Totals:         0      10       0       0       0
  1556 ;;Total ram usage:       10 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    4
  1559 ;; This function calls:
  1560 ;;		_Lcd_Cmd
  1561 ;;		_Lcd_Write_Char
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _Lcd_String
  1569  01E7                     _Lcd_String:	
  1570                           
  1571                           ;incstack = 0
  1572                           ; Regs used in _Lcd_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1573                           ;Lcd_String@a stored from wreg
  1574  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1575  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1576  01E9  00E9               	movwf	Lcd_String@a
  1577                           
  1578                           ;pic16f87xa.c: 144: int i;
  1579                           ;pic16f87xa.c: 145: char temp,z,y;
  1580                           ;pic16f87xa.c: 146: if(a == 1)
  1581  01EA  0369               	decf	Lcd_String@a,w
  1582  01EB  1D03               	btfss	3,2
  1583  01EC  29FB               	goto	l2602
  1584                           
  1585                           ;pic16f87xa.c: 147: {
  1586                           ;pic16f87xa.c: 148: temp = 0x80 + b - 1;
  1587  01ED  0865               	movf	Lcd_String@b,w
  1588  01EE  3E7F               	addlw	127
  1589  01EF  00E7               	movwf	??_Lcd_String
  1590  01F0  0867               	movf	??_Lcd_String,w
  1591  01F1  00EE               	movwf	Lcd_String@temp
  1592                           
  1593                           ;pic16f87xa.c: 149: z = temp>>4;
  1594  01F2  086E               	movf	Lcd_String@temp,w
  1595  01F3  00E7               	movwf	??_Lcd_String
  1596  01F4  3004               	movlw	4
  1597  01F5                     u1995:	
  1598  01F5  1003               	clrc
  1599  01F6  0CE7               	rrf	??_Lcd_String,f
  1600  01F7  3EFF               	addlw	-1
  1601  01F8  1D03               	skipz
  1602  01F9  29F5               	goto	u1995
  1603  01FA  2A0E               	goto	L1
  1604  01FB                     l2602:	
  1605                           ;pic16f87xa.c: 153: }
  1606                           
  1607                           ;pic16f87xa.c: 152: Lcd_Cmd(y);
  1608                           
  1609                           ;pic16f87xa.c: 151: Lcd_Cmd(z);
  1610                           
  1611                           ;pic16f87xa.c: 150: y = temp & 0x0F;
  1612                           
  1613                           
  1614                           ;pic16f87xa.c: 154: else if(a == 2)
  1615  01FB  3002               	movlw	2
  1616  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1617  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1618  01FE  0669               	xorwf	Lcd_String@a,w
  1619  01FF  1D03               	btfss	3,2
  1620  0200  2A25               	goto	l2612
  1621                           
  1622                           ;pic16f87xa.c: 155: {
  1623                           ;pic16f87xa.c: 156: temp = 0xC0 + b - 1;
  1624  0201  0865               	movf	Lcd_String@b,w
  1625  0202  3EBF               	addlw	191
  1626  0203  00E7               	movwf	??_Lcd_String
  1627  0204  0867               	movf	??_Lcd_String,w
  1628  0205  00EE               	movwf	Lcd_String@temp
  1629                           
  1630                           ;pic16f87xa.c: 157: z = temp>>4;
  1631  0206  086E               	movf	Lcd_String@temp,w
  1632  0207  00E7               	movwf	??_Lcd_String
  1633  0208  3004               	movlw	4
  1634  0209                     u2015:	
  1635  0209  1003               	clrc
  1636  020A  0CE7               	rrf	??_Lcd_String,f
  1637  020B  3EFF               	addlw	-1
  1638  020C  1D03               	skipz
  1639  020D  2A09               	goto	u2015
  1640  020E                     L1:	
  1641  020E  0867               	movf	??_Lcd_String,w
  1642  020F  00E8               	movwf	??_Lcd_String+1
  1643  0210  0868               	movf	??_Lcd_String+1,w
  1644  0211  00EC               	movwf	Lcd_String@z
  1645                           
  1646                           ;pic16f87xa.c: 158: y = temp & 0x0F;
  1647  0212  086E               	movf	Lcd_String@temp,w
  1648  0213  390F               	andlw	15
  1649  0214  00E7               	movwf	??_Lcd_String
  1650  0215  0867               	movf	??_Lcd_String,w
  1651  0216  00ED               	movwf	Lcd_String@y
  1652                           
  1653                           ;pic16f87xa.c: 159: Lcd_Cmd(z);
  1654  0217  086C               	movf	Lcd_String@z,w
  1655  0218  120A  118A  24BA  120A  118A  	fcall	_Lcd_Cmd
  1656                           
  1657                           ;pic16f87xa.c: 160: Lcd_Cmd(y);
  1658  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1659  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1660  021F  086D               	movf	Lcd_String@y,w
  1661  0220  120A  118A  24BA  120A  118A  	fcall	_Lcd_Cmd
  1662  0225                     l2612:	
  1663                           
  1664                           ;pic16f87xa.c: 161: }
  1665                           ;pic16f87xa.c: 162: for(i=0;c[i]!='\0';i++)
  1666  0225  1283               	bcf	3,5	;RP0=0, select bank0
  1667  0226  1303               	bcf	3,6	;RP1=0, select bank0
  1668  0227  01EA               	clrf	Lcd_String@i
  1669  0228  01EB               	clrf	Lcd_String@i+1
  1670  0229                     l2618:	
  1671  0229  086A               	movf	Lcd_String@i,w
  1672  022A  0766               	addwf	Lcd_String@c,w
  1673  022B  0084               	movwf	4
  1674  022C  120A  118A  230A  120A  118A  	fcall	stringdir
  1675  0231  3A00               	xorlw	0
  1676  0232  1903               	btfsc	3,2
  1677  0233  0008               	return
  1678                           
  1679                           ;pic16f87xa.c: 163: Lcd_Write_Char(c[i]);
  1680  0234  086A               	movf	Lcd_String@i,w
  1681  0235  0766               	addwf	Lcd_String@c,w
  1682  0236  0084               	movwf	4
  1683  0237  120A  118A  230A  120A  118A  	fcall	stringdir
  1684  023C  120A  118A  23AB  120A  118A  	fcall	_Lcd_Write_Char
  1685  0241  3001               	movlw	1
  1686  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1687  0243  1303               	bcf	3,6	;RP1=0, select bank0
  1688  0244  07EA               	addwf	Lcd_String@i,f
  1689  0245  1803               	skipnc
  1690  0246  0AEB               	incf	Lcd_String@i+1,f
  1691  0247  3000               	movlw	0
  1692  0248  07EB               	addwf	Lcd_String@i+1,f
  1693  0249  2A29               	goto	l2618
  1694  024A                     __end_of_Lcd_String:	
  1695                           
  1696                           	psect	text5
  1697  03AB                     __ptext5:	
  1698 ;; *************** function _Lcd_Write_Char *****************
  1699 ;; Defined at:
  1700 ;;		line 85 in file "pic16f87xa.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  a               1    wreg     unsigned char 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  a               1    4[BANK0 ] unsigned char 
  1705 ;;  y               1    3[BANK0 ] unsigned char 
  1706 ;;  temp            1    2[BANK0 ] unsigned char 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0, pclath, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1716 ;;      Params:         0       0       0       0       0
  1717 ;;      Locals:         0       3       0       0       0
  1718 ;;      Temps:          0       1       0       0       0
  1719 ;;      Totals:         0       4       0       0       0
  1720 ;;Total ram usage:        4 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    3
  1723 ;; This function calls:
  1724 ;;		_Lcd_Port
  1725 ;; This function is called by:
  1726 ;;		_Lcd_Write_String
  1727 ;;		_Lcd_String
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           
  1732                           ;psect for function _Lcd_Write_Char
  1733  03AB                     _Lcd_Write_Char:	
  1734                           
  1735                           ;incstack = 0
  1736                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1737                           ;Lcd_Write_Char@a stored from wreg
  1738  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  1739  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  1740  03AD  00E4               	movwf	Lcd_Write_Char@a
  1741                           
  1742                           ;pic16f87xa.c: 87: char temp,y;
  1743                           ;pic16f87xa.c: 89: temp = a&0x0F;
  1744  03AE  0864               	movf	Lcd_Write_Char@a,w
  1745  03AF  390F               	andlw	15
  1746  03B0  00E1               	movwf	??_Lcd_Write_Char
  1747  03B1  0861               	movf	??_Lcd_Write_Char,w
  1748  03B2  00E2               	movwf	Lcd_Write_Char@temp
  1749                           
  1750                           ;pic16f87xa.c: 90: y = a&0xF0;
  1751  03B3  0864               	movf	Lcd_Write_Char@a,w
  1752  03B4  39F0               	andlw	240
  1753  03B5  00E1               	movwf	??_Lcd_Write_Char
  1754  03B6  0861               	movf	??_Lcd_Write_Char,w
  1755  03B7  00E3               	movwf	Lcd_Write_Char@y
  1756                           
  1757                           ;pic16f87xa.c: 91: RD1 = 1;
  1758  03B8  1488               	bsf	8,1	;volatile
  1759                           
  1760                           ;pic16f87xa.c: 92: RD2=0;
  1761  03B9  1108               	bcf	8,2	;volatile
  1762                           
  1763                           ;pic16f87xa.c: 93: Lcd_Port(y>>4);
  1764  03BA  0863               	movf	Lcd_Write_Char@y,w
  1765  03BB  00E1               	movwf	??_Lcd_Write_Char
  1766  03BC  3004               	movlw	4
  1767  03BD                     u1925:	
  1768  03BD  1003               	clrc
  1769  03BE  0CE1               	rrf	??_Lcd_Write_Char,f
  1770  03BF  3EFF               	addlw	-1
  1771  03C0  1D03               	skipz
  1772  03C1  2BBD               	goto	u1925
  1773  03C2  0861               	movf	??_Lcd_Write_Char,w
  1774  03C3  120A  118A  24D7  120A  118A  	fcall	_Lcd_Port
  1775                           
  1776                           ;pic16f87xa.c: 94: RD0 = 1;
  1777  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  1778  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  1779  03CA  1408               	bsf	8,0	;volatile
  1780                           
  1781                           ;pic16f87xa.c: 95: _delay((unsigned long)((40)*(20000000/4000000.0)));
  1782  03CB  3041               	movlw	65
  1783  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  1784  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  1785  03CE  00E1               	movwf	??_Lcd_Write_Char
  1786  03CF                     u2647:	
  1787  03CF  0BE1               	decfsz	??_Lcd_Write_Char,f
  1788  03D0  2BCF               	goto	u2647
  1789  03D1  2BD2               	nop2
  1790                           
  1791                           ;pic16f87xa.c: 96: RD0 = 0;
  1792  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  1793  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  1794  03D4  1008               	bcf	8,0	;volatile
  1795                           
  1796                           ;pic16f87xa.c: 97: Lcd_Port(temp);
  1797  03D5  0862               	movf	Lcd_Write_Char@temp,w
  1798  03D6  120A  118A  24D7  120A  118A  	fcall	_Lcd_Port
  1799                           
  1800                           ;pic16f87xa.c: 98: RD0 = 1;
  1801  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  1802  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  1803  03DD  1408               	bsf	8,0	;volatile
  1804                           
  1805                           ;pic16f87xa.c: 99: _delay((unsigned long)((40)*(20000000/4000000.0)));
  1806  03DE  3041               	movlw	65
  1807  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  1808  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  1809  03E1  00E1               	movwf	??_Lcd_Write_Char
  1810  03E2                     u2657:	
  1811  03E2  0BE1               	decfsz	??_Lcd_Write_Char,f
  1812  03E3  2BE2               	goto	u2657
  1813  03E4  2BE5               	nop2
  1814                           
  1815                           ;pic16f87xa.c: 100: RD0 = 0;
  1816  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1817  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1818  03E7  1008               	bcf	8,0	;volatile
  1819  03E8  0008               	return
  1820  03E9                     __end_of_Lcd_Write_Char:	
  1821                           
  1822                           	psect	text6
  1823  0359                     __ptext6:	
  1824 ;; *************** function _Lcd_Set_Cursor *****************
  1825 ;; Defined at:
  1826 ;;		line 45 in file "pic16f87xa.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  a               1    wreg     unsigned char 
  1829 ;;  b               1    4[BANK0 ] unsigned char 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  a               1    7[BANK0 ] unsigned char 
  1832 ;;  temp            1   10[BANK0 ] unsigned char 
  1833 ;;  y               1    9[BANK0 ] unsigned char 
  1834 ;;  z               1    8[BANK0 ] unsigned char 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0, pclath, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1844 ;;      Params:         0       1       0       0       0
  1845 ;;      Locals:         0       4       0       0       0
  1846 ;;      Temps:          0       2       0       0       0
  1847 ;;      Totals:         0       7       0       0       0
  1848 ;;Total ram usage:        7 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    4
  1851 ;; This function calls:
  1852 ;;		_Lcd_Cmd
  1853 ;; This function is called by:
  1854 ;;		_main
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           
  1859                           ;psect for function _Lcd_Set_Cursor
  1860  0359                     _Lcd_Set_Cursor:	
  1861                           
  1862                           ;incstack = 0
  1863                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1864                           ;Lcd_Set_Cursor@a stored from wreg
  1865  0359  1283               	bcf	3,5	;RP0=0, select bank0
  1866  035A  1303               	bcf	3,6	;RP1=0, select bank0
  1867  035B  00E7               	movwf	Lcd_Set_Cursor@a
  1868                           
  1869                           ;pic16f87xa.c: 47: char temp,z,y;
  1870                           ;pic16f87xa.c: 48: if(a == 1)
  1871  035C  0367               	decf	Lcd_Set_Cursor@a,w
  1872  035D  1D03               	btfss	3,2
  1873  035E  2B82               	goto	l2564
  1874                           
  1875                           ;pic16f87xa.c: 49: {
  1876                           ;pic16f87xa.c: 50: temp = 0x80 + b - 1;
  1877  035F  0864               	movf	Lcd_Set_Cursor@b,w
  1878  0360  3E7F               	addlw	127
  1879  0361  00E5               	movwf	??_Lcd_Set_Cursor
  1880  0362  0865               	movf	??_Lcd_Set_Cursor,w
  1881  0363  00EA               	movwf	Lcd_Set_Cursor@temp
  1882                           
  1883                           ;pic16f87xa.c: 51: z = temp>>4;
  1884  0364  086A               	movf	Lcd_Set_Cursor@temp,w
  1885  0365  00E5               	movwf	??_Lcd_Set_Cursor
  1886  0366  3004               	movlw	4
  1887  0367                     u1945:	
  1888  0367  1003               	clrc
  1889  0368  0CE5               	rrf	??_Lcd_Set_Cursor,f
  1890  0369  3EFF               	addlw	-1
  1891  036A  1D03               	skipz
  1892  036B  2B67               	goto	u1945
  1893  036C  0865               	movf	??_Lcd_Set_Cursor,w
  1894  036D  00E6               	movwf	??_Lcd_Set_Cursor+1
  1895  036E  0866               	movf	??_Lcd_Set_Cursor+1,w
  1896  036F  00E8               	movwf	Lcd_Set_Cursor@z
  1897                           
  1898                           ;pic16f87xa.c: 52: y = temp & 0x0F;
  1899  0370  086A               	movf	Lcd_Set_Cursor@temp,w
  1900  0371  390F               	andlw	15
  1901  0372  00E5               	movwf	??_Lcd_Set_Cursor
  1902  0373  0865               	movf	??_Lcd_Set_Cursor,w
  1903  0374  00E9               	movwf	Lcd_Set_Cursor@y
  1904                           
  1905                           ;pic16f87xa.c: 53: Lcd_Cmd(z);
  1906  0375  0868               	movf	Lcd_Set_Cursor@z,w
  1907  0376  120A  118A  24BA  120A  118A  	fcall	_Lcd_Cmd
  1908                           
  1909                           ;pic16f87xa.c: 54: Lcd_Cmd(y);
  1910  037B  1283               	bcf	3,5	;RP0=0, select bank0
  1911  037C  1303               	bcf	3,6	;RP1=0, select bank0
  1912  037D  0869               	movf	Lcd_Set_Cursor@y,w
  1913  037E  120A  118A  24BA   	fcall	_Lcd_Cmd
  1914                           
  1915                           ;pic16f87xa.c: 55: }
  1916  0381  0008               	return
  1917  0382                     l2564:	
  1918                           
  1919                           ;pic16f87xa.c: 56: else if(a == 2)
  1920  0382  3002               	movlw	2
  1921  0383  1283               	bcf	3,5	;RP0=0, select bank0
  1922  0384  1303               	bcf	3,6	;RP1=0, select bank0
  1923  0385  0667               	xorwf	Lcd_Set_Cursor@a,w
  1924  0386  1D03               	btfss	3,2
  1925  0387  0008               	return
  1926                           
  1927                           ;pic16f87xa.c: 57: {
  1928                           ;pic16f87xa.c: 58: temp = 0xC0 + b - 1;
  1929  0388  0864               	movf	Lcd_Set_Cursor@b,w
  1930  0389  3EBF               	addlw	191
  1931  038A  00E5               	movwf	??_Lcd_Set_Cursor
  1932  038B  0865               	movf	??_Lcd_Set_Cursor,w
  1933  038C  00EA               	movwf	Lcd_Set_Cursor@temp
  1934                           
  1935                           ;pic16f87xa.c: 59: z = temp>>4;
  1936  038D  086A               	movf	Lcd_Set_Cursor@temp,w
  1937  038E  00E5               	movwf	??_Lcd_Set_Cursor
  1938  038F  3004               	movlw	4
  1939  0390                     u1965:	
  1940  0390  1003               	clrc
  1941  0391  0CE5               	rrf	??_Lcd_Set_Cursor,f
  1942  0392  3EFF               	addlw	-1
  1943  0393  1D03               	skipz
  1944  0394  2B90               	goto	u1965
  1945  0395  0865               	movf	??_Lcd_Set_Cursor,w
  1946  0396  00E6               	movwf	??_Lcd_Set_Cursor+1
  1947  0397  0866               	movf	??_Lcd_Set_Cursor+1,w
  1948  0398  00E8               	movwf	Lcd_Set_Cursor@z
  1949                           
  1950                           ;pic16f87xa.c: 60: y = temp & 0x0F;
  1951  0399  086A               	movf	Lcd_Set_Cursor@temp,w
  1952  039A  390F               	andlw	15
  1953  039B  00E5               	movwf	??_Lcd_Set_Cursor
  1954  039C  0865               	movf	??_Lcd_Set_Cursor,w
  1955  039D  00E9               	movwf	Lcd_Set_Cursor@y
  1956                           
  1957                           ;pic16f87xa.c: 61: Lcd_Cmd(z);
  1958  039E  0868               	movf	Lcd_Set_Cursor@z,w
  1959  039F  120A  118A  24BA  120A  118A  	fcall	_Lcd_Cmd
  1960                           
  1961                           ;pic16f87xa.c: 62: Lcd_Cmd(y);
  1962  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  1963  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  1964  03A6  0869               	movf	Lcd_Set_Cursor@y,w
  1965  03A7  120A  118A  24BA   	fcall	_Lcd_Cmd
  1966  03AA  0008               	return
  1967  03AB                     __end_of_Lcd_Set_Cursor:	
  1968                           
  1969                           	psect	text7
  1970  024A                     __ptext7:	
  1971 ;; *************** function _Lcd_Init *****************
  1972 ;; Defined at:
  1973 ;;		line 66 in file "pic16f87xa.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0, pclath, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1987 ;;      Params:         0       0       0       0       0
  1988 ;;      Locals:         0       0       0       0       0
  1989 ;;      Temps:          0       2       0       0       0
  1990 ;;      Totals:         0       2       0       0       0
  1991 ;;Total ram usage:        2 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    4
  1994 ;; This function calls:
  1995 ;;		_Lcd_Cmd
  1996 ;;		_Lcd_Port
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           
  2003                           ;psect for function _Lcd_Init
  2004  024A                     _Lcd_Init:	
  2005                           
  2006                           ;pic16f87xa.c: 68: Lcd_Port(0x00);
  2007                           
  2008                           ;incstack = 0
  2009                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2010  024A  3000               	movlw	0
  2011  024B  120A  118A  24D7  120A  118A  	fcall	_Lcd_Port
  2012                           
  2013                           ;pic16f87xa.c: 69: _delay((unsigned long)((20)*(20000000/4000.0)));
  2014  0250  3082               	movlw	130
  2015  0251  1283               	bcf	3,5	;RP0=0, select bank0
  2016  0252  1303               	bcf	3,6	;RP1=0, select bank0
  2017  0253  00E5               	movwf	??_Lcd_Init+1
  2018  0254  30DD               	movlw	221
  2019  0255  00E4               	movwf	??_Lcd_Init
  2020  0256                     u2667:	
  2021  0256  0BE4               	decfsz	??_Lcd_Init,f
  2022  0257  2A56               	goto	u2667
  2023  0258  0BE5               	decfsz	??_Lcd_Init+1,f
  2024  0259  2A56               	goto	u2667
  2025                           
  2026                           ;pic16f87xa.c: 70: Lcd_Cmd(0x03);
  2027  025A  3003               	movlw	3
  2028  025B  120A  118A  24BA  120A  118A  	fcall	_Lcd_Cmd
  2029                           
  2030                           ;pic16f87xa.c: 71: _delay((unsigned long)((5)*(20000000/4000.0)));
  2031  0260  3021               	movlw	33
  2032  0261  1283               	bcf	3,5	;RP0=0, select bank0
  2033  0262  1303               	bcf	3,6	;RP1=0, select bank0
  2034  0263  00E5               	movwf	??_Lcd_Init+1
  2035  0264  3075               	movlw	117
  2036  0265  00E4               	movwf	??_Lcd_Init
  2037  0266                     u2677:	
  2038  0266  0BE4               	decfsz	??_Lcd_Init,f
  2039  0267  2A66               	goto	u2677
  2040  0268  0BE5               	decfsz	??_Lcd_Init+1,f
  2041  0269  2A66               	goto	u2677
  2042  026A  2A6B               	nop2
  2043                           
  2044                           ;pic16f87xa.c: 72: Lcd_Cmd(0x03);
  2045  026B  3003               	movlw	3
  2046  026C  120A  118A  24BA  120A  118A  	fcall	_Lcd_Cmd
  2047                           
  2048                           ;pic16f87xa.c: 73: _delay((unsigned long)((11)*(20000000/4000.0)));
  2049  0271  3048               	movlw	72
  2050  0272  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0273  1303               	bcf	3,6	;RP1=0, select bank0
  2052  0274  00E5               	movwf	??_Lcd_Init+1
  2053  0275  306B               	movlw	107
  2054  0276  00E4               	movwf	??_Lcd_Init
  2055  0277                     u2687:	
  2056  0277  0BE4               	decfsz	??_Lcd_Init,f
  2057  0278  2A77               	goto	u2687
  2058  0279  0BE5               	decfsz	??_Lcd_Init+1,f
  2059  027A  2A77               	goto	u2687
  2060  027B  2A7C               	nop2
  2061                           
  2062                           ;pic16f87xa.c: 74: Lcd_Cmd(0x03);
  2063  027C  3003               	movlw	3
  2064  027D  120A  118A  24BA  120A  118A  	fcall	_Lcd_Cmd
  2065                           
  2066                           ;pic16f87xa.c: 76: Lcd_Cmd(0x02);
  2067  0282  3002               	movlw	2
  2068  0283  120A  118A  24BA  120A  118A  	fcall	_Lcd_Cmd
  2069                           
  2070                           ;pic16f87xa.c: 77: Lcd_Cmd(0x02);
  2071  0288  3002               	movlw	2
  2072  0289  120A  118A  24BA  120A  118A  	fcall	_Lcd_Cmd
  2073                           
  2074                           ;pic16f87xa.c: 78: Lcd_Cmd(0x08);
  2075  028E  3008               	movlw	8
  2076  028F  120A  118A  24BA  120A  118A  	fcall	_Lcd_Cmd
  2077                           
  2078                           ;pic16f87xa.c: 79: Lcd_Cmd(0x00);
  2079  0294  3000               	movlw	0
  2080  0295  120A  118A  24BA  120A  118A  	fcall	_Lcd_Cmd
  2081                           
  2082                           ;pic16f87xa.c: 80: Lcd_Cmd(0x0C);
  2083  029A  300C               	movlw	12
  2084  029B  120A  118A  24BA  120A  118A  	fcall	_Lcd_Cmd
  2085                           
  2086                           ;pic16f87xa.c: 81: Lcd_Cmd(0x00);
  2087  02A0  3000               	movlw	0
  2088  02A1  120A  118A  24BA  120A  118A  	fcall	_Lcd_Cmd
  2089                           
  2090                           ;pic16f87xa.c: 82: Lcd_Cmd(0x06);
  2091  02A6  3006               	movlw	6
  2092  02A7  120A  118A  24BA   	fcall	_Lcd_Cmd
  2093  02AA  0008               	return
  2094  02AB                     __end_of_Lcd_Init:	
  2095                           
  2096                           	psect	text8
  2097  0529                     __ptext8:	
  2098 ;; *************** function _Lcd_Clear *****************
  2099 ;; Defined at:
  2100 ;;		line 39 in file "pic16f87xa.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;		None
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;		None
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  2  110[None  ] int 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0, pclath, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2114 ;;      Params:         0       0       0       0       0
  2115 ;;      Locals:         0       0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0
  2117 ;;      Totals:         0       0       0       0       0
  2118 ;;Total ram usage:        0 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    4
  2121 ;; This function calls:
  2122 ;;		_Lcd_Cmd
  2123 ;; This function is called by:
  2124 ;;		_main
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           
  2129                           ;psect for function _Lcd_Clear
  2130  0529                     _Lcd_Clear:	
  2131                           
  2132                           ;pic16f87xa.c: 41: Lcd_Cmd(0);
  2133                           
  2134                           ;incstack = 0
  2135                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2136  0529  3000               	movlw	0
  2137  052A  120A  118A  24BA  120A  118A  	fcall	_Lcd_Cmd
  2138                           
  2139                           ;pic16f87xa.c: 42: Lcd_Cmd(1);
  2140  052F  3001               	movlw	1
  2141  0530  120A  118A  24BA   	fcall	_Lcd_Cmd
  2142  0533  0008               	return
  2143  0534                     __end_of_Lcd_Clear:	
  2144                           
  2145                           	psect	text9
  2146  04BA                     __ptext9:	
  2147 ;; *************** function _Lcd_Cmd *****************
  2148 ;; Defined at:
  2149 ;;		line 29 in file "pic16f87xa.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  a               1    wreg     unsigned char 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  a               1    3[BANK0 ] unsigned char 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0, pclath, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2163 ;;      Params:         0       0       0       0       0
  2164 ;;      Locals:         0       1       0       0       0
  2165 ;;      Temps:          0       2       0       0       0
  2166 ;;      Totals:         0       3       0       0       0
  2167 ;;Total ram usage:        3 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    3
  2170 ;; This function calls:
  2171 ;;		_Lcd_Port
  2172 ;; This function is called by:
  2173 ;;		_Lcd_Clear
  2174 ;;		_Lcd_Set_Cursor
  2175 ;;		_Lcd_Init
  2176 ;;		_Lcd_String
  2177 ;;		_Lcd_Char
  2178 ;;		_Lcd_Shift_Right
  2179 ;;		_Lcd_Shift_Left
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           
  2184                           ;psect for function _Lcd_Cmd
  2185  04BA                     _Lcd_Cmd:	
  2186                           
  2187                           ;incstack = 0
  2188                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2189                           ;Lcd_Cmd@a stored from wreg
  2190  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2191  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2192  04BC  00E3               	movwf	Lcd_Cmd@a
  2193                           
  2194                           ;pic16f87xa.c: 31: RD1 = 0;
  2195  04BD  1088               	bcf	8,1	;volatile
  2196                           
  2197                           ;pic16f87xa.c: 32: RD2=0;
  2198  04BE  1108               	bcf	8,2	;volatile
  2199                           
  2200                           ;pic16f87xa.c: 33: Lcd_Port(a);
  2201  04BF  0863               	movf	Lcd_Cmd@a,w
  2202  04C0  120A  118A  24D7  120A  118A  	fcall	_Lcd_Port
  2203                           
  2204                           ;pic16f87xa.c: 34: RD0 = 1;
  2205  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2206  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2207  04C7  1408               	bsf	8,0	;volatile
  2208                           
  2209                           ;pic16f87xa.c: 35: _delay((unsigned long)((4)*(20000000/4000.0)));
  2210  04C8  301A               	movlw	26
  2211  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  2212  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  2213  04CB  00E2               	movwf	??_Lcd_Cmd+1
  2214  04CC  30F7               	movlw	247
  2215  04CD  00E1               	movwf	??_Lcd_Cmd
  2216  04CE                     u2697:	
  2217  04CE  0BE1               	decfsz	??_Lcd_Cmd,f
  2218  04CF  2CCE               	goto	u2697
  2219  04D0  0BE2               	decfsz	??_Lcd_Cmd+1,f
  2220  04D1  2CCE               	goto	u2697
  2221  04D2  2CD3               	nop2
  2222                           
  2223                           ;pic16f87xa.c: 36: RD0 = 0;
  2224  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2225  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  2226  04D5  1008               	bcf	8,0	;volatile
  2227  04D6  0008               	return
  2228  04D7                     __end_of_Lcd_Cmd:	
  2229                           
  2230                           	psect	text10
  2231  04D7                     __ptext10:	
  2232 ;; *************** function _Lcd_Port *****************
  2233 ;; Defined at:
  2234 ;;		line 7 in file "pic16f87xa.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  a               1    wreg     unsigned char 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  a               1    0[BANK0 ] unsigned char 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2248 ;;      Params:         0       0       0       0       0
  2249 ;;      Locals:         0       1       0       0       0
  2250 ;;      Temps:          0       0       0       0       0
  2251 ;;      Totals:         0       1       0       0       0
  2252 ;;Total ram usage:        1 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; Hardware stack levels required when called:    2
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		_Lcd_Cmd
  2259 ;;		_Lcd_Init
  2260 ;;		_Lcd_Write_Char
  2261 ;;		_Lcd_Char
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function _Lcd_Port
  2267  04D7                     _Lcd_Port:	
  2268                           
  2269                           ;incstack = 0
  2270                           ; Regs used in _Lcd_Port: [wreg]
  2271                           ;Lcd_Port@a stored from wreg
  2272  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2273  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2274  04D9  00E0               	movwf	Lcd_Port@a
  2275                           
  2276                           ;pic16f87xa.c: 9: if(a & 1)
  2277  04DA  1C60               	btfss	Lcd_Port@a,0
  2278  04DB  2CDE               	goto	l97
  2279                           
  2280                           ;pic16f87xa.c: 10: RD4 = 1;
  2281  04DC  1608               	bsf	8,4	;volatile
  2282  04DD  2CDF               	goto	l98
  2283  04DE                     l97:	
  2284                           
  2285                           ;pic16f87xa.c: 11: else
  2286                           ;pic16f87xa.c: 12: RD4 = 0;
  2287  04DE  1208               	bcf	8,4	;volatile
  2288  04DF                     l98:	
  2289                           
  2290                           ;pic16f87xa.c: 14: if(a & 2)
  2291  04DF  1CE0               	btfss	Lcd_Port@a,1
  2292  04E0  2CE3               	goto	l99
  2293                           
  2294                           ;pic16f87xa.c: 15: RD5 = 1;
  2295  04E1  1688               	bsf	8,5	;volatile
  2296  04E2  2CE4               	goto	l100
  2297  04E3                     l99:	
  2298                           
  2299                           ;pic16f87xa.c: 16: else
  2300                           ;pic16f87xa.c: 17: RD5 = 0;
  2301  04E3  1288               	bcf	8,5	;volatile
  2302  04E4                     l100:	
  2303                           
  2304                           ;pic16f87xa.c: 19: if(a & 4)
  2305  04E4  1D60               	btfss	Lcd_Port@a,2
  2306  04E5  2CE8               	goto	l101
  2307                           
  2308                           ;pic16f87xa.c: 20: RD6 = 1;
  2309  04E6  1708               	bsf	8,6	;volatile
  2310  04E7  2CE9               	goto	l102
  2311  04E8                     l101:	
  2312                           
  2313                           ;pic16f87xa.c: 21: else
  2314                           ;pic16f87xa.c: 22: RD6 = 0;
  2315  04E8  1308               	bcf	8,6	;volatile
  2316  04E9                     l102:	
  2317                           
  2318                           ;pic16f87xa.c: 24: if(a & 8)
  2319  04E9  1DE0               	btfss	Lcd_Port@a,3
  2320  04EA  2CED               	goto	l103
  2321                           
  2322                           ;pic16f87xa.c: 25: RD7 = 1;
  2323  04EB  1788               	bsf	8,7	;volatile
  2324  04EC  0008               	return
  2325  04ED                     l103:	
  2326                           
  2327                           ;pic16f87xa.c: 26: else
  2328                           ;pic16f87xa.c: 27: RD7 = 0;
  2329  04ED  1388               	bcf	8,7	;volatile
  2330  04EE  0008               	return
  2331  04EF                     __end_of_Lcd_Port:	
  2332                           
  2333                           	psect	text11
  2334  03E9                     __ptext11:	
  2335 ;; *************** function _ISR *****************
  2336 ;; Defined at:
  2337 ;;		line 113 in file "tx.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;		None
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;		None
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      void 
  2344 ;; Registers used:
  2345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2351 ;;      Params:         0       0       0       0       0
  2352 ;;      Locals:         0       0       0       0       0
  2353 ;;      Temps:          5       0       0       0       0
  2354 ;;      Totals:         5       0       0       0       0
  2355 ;;Total ram usage:        5 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    1
  2358 ;; This function calls:
  2359 ;;		_UART1_Data_Ready
  2360 ;;		_UART1_Read
  2361 ;; This function is called by:
  2362 ;;		Interrupt level 1
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           
  2367                           ;psect for function _ISR
  2368  03E9                     _ISR:	
  2369  03E9                     i1l406:	
  2370                           ;tx.c: 117: {
  2371                           ;tx.c: 120: {
  2372                           ;tx.c: 121: while(!RCIF);
  2373                           
  2374  03E9  1E8C               	btfss	12,5	;volatile
  2375  03EA  2BE9               	goto	i1l406
  2376                           
  2377                           ;tx.c: 122: a=RCREG;
  2378  03EB  081A               	movf	26,w	;volatile
  2379  03EC  00F5               	movwf	??_ISR
  2380  03ED  0875               	movf	??_ISR,w
  2381  03EE  00F4               	movwf	_a
  2382                           
  2383                           ;tx.c: 123: {
  2384                           ;tx.c: 124: for(i=0;i<12;)
  2385  03EF  01F2               	clrf	_i
  2386  03F0  300C               	movlw	12
  2387  03F1  0272               	subwf	_i,w
  2388  03F2  1803               	btfsc	3,0
  2389  03F3  2C14               	goto	i1l2504
  2390  03F4                     i1l2494:	
  2391                           
  2392                           ;tx.c: 125: {
  2393                           ;tx.c: 126: if(UART1_Data_Ready())
  2394  03F4  120A  118A  2542  120A  118A  	fcall	_UART1_Data_Ready
  2395  03F9  3A00               	xorlw	0
  2396  03FA  1903               	skipnz
  2397  03FB  2C10               	goto	i1l2502
  2398                           
  2399                           ;tx.c: 127: {
  2400                           ;tx.c: 128: a = UART1_Read();
  2401  03FC  120A  118A  253C  120A  118A  	fcall	_UART1_Read
  2402  0401  00F5               	movwf	??_ISR
  2403  0402  0875               	movf	??_ISR,w
  2404  0403  00F4               	movwf	_a
  2405                           
  2406                           ;tx.c: 129: rfid[i]=a;
  2407  0404  0874               	movf	_a,w
  2408  0405  00F5               	movwf	??_ISR
  2409  0406  0872               	movf	_i,w
  2410  0407  3E48               	addlw	(low (_rfid| 0))& (0+255)
  2411  0408  0084               	movwf	4
  2412  0409  0875               	movf	??_ISR,w
  2413  040A  1383               	bcf	3,7	;select IRP bank0
  2414  040B  0080               	movwf	0
  2415                           
  2416                           ;tx.c: 130: i++;
  2417  040C  3001               	movlw	1
  2418  040D  00F5               	movwf	??_ISR
  2419  040E  0875               	movf	??_ISR,w
  2420  040F  07F2               	addwf	_i,f
  2421  0410                     i1l2502:	
  2422  0410  300C               	movlw	12
  2423  0411  0272               	subwf	_i,w
  2424  0412  1C03               	skipc
  2425  0413  2BF4               	goto	i1l2494
  2426  0414                     i1l2504:	
  2427                           
  2428                           ;tx.c: 131: }
  2429                           ;tx.c: 132: }
  2430                           ;tx.c: 133: k=1;
  2431  0414  3001               	movlw	1
  2432  0415  1283               	bcf	3,5	;RP0=0, select bank0
  2433  0416  1303               	bcf	3,6	;RP1=0, select bank0
  2434  0417  00DC               	movwf	_k
  2435  0418  3000               	movlw	0
  2436  0419  00DD               	movwf	_k+1
  2437                           
  2438                           ;tx.c: 135: RCIF=0;
  2439  041A  128C               	bcf	12,5	;volatile
  2440                           
  2441                           ;tx.c: 137: {
  2442                           ;tx.c: 140: }
  2443                           ;tx.c: 141: }
  2444                           ;tx.c: 142: RCIF=0;
  2445  041B  128C               	bcf	12,5	;volatile
  2446  041C  0879               	movf	??_ISR+4,w
  2447  041D  00FF               	movwf	127
  2448  041E  0878               	movf	??_ISR+3,w
  2449  041F  008A               	movwf	10
  2450  0420  0877               	movf	??_ISR+2,w
  2451  0421  0084               	movwf	4
  2452  0422  0E76               	swapf	(??_ISR+1)^(0+-128),w
  2453  0423  0083               	movwf	3
  2454  0424  0EFE               	swapf	126,f
  2455  0425  0E7E               	swapf	126,w
  2456  0426  0009               	retfie
  2457  0427                     __end_of_ISR:	
  2458                           
  2459                           	psect	intentry
  2460  0004                     __pintentry:	
  2461                           ;incstack = 0
  2462                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2463                           
  2464  0004                     interrupt_function:	
  2465  007E                     saved_w	set	btemp
  2466  0004  00FE               	movwf	btemp
  2467  0005  0E03               	swapf	3,w
  2468  0006  00F6               	movwf	??_ISR+1
  2469  0007  0804               	movf	4,w
  2470  0008  00F7               	movwf	??_ISR+2
  2471  0009  080A               	movf	10,w
  2472  000A  00F8               	movwf	??_ISR+3
  2473  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2474  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2475  000D  087F               	movf	btemp+1,w
  2476  000E  00F9               	movwf	??_ISR+4
  2477  000F  120A  118A  2BE9   	ljmp	_ISR
  2478                           
  2479                           	psect	text12
  2480  053C                     __ptext12:	
  2481 ;; *************** function _UART1_Read *****************
  2482 ;; Defined at:
  2483 ;;		line 312 in file "pic16f87xa.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;		None
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;		None
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      unsigned char 
  2490 ;; Registers used:
  2491 ;;		wreg
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2497 ;;      Params:         0       0       0       0       0
  2498 ;;      Locals:         0       0       0       0       0
  2499 ;;      Temps:          0       0       0       0       0
  2500 ;;      Totals:         0       0       0       0       0
  2501 ;;Total ram usage:        0 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_ISR
  2507 ;;		_UART1_Read_Text
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           
  2512                           ;psect for function _UART1_Read
  2513  053C                     _UART1_Read:	
  2514  053C                     i1l201:	
  2515                           ;pic16f87xa.c: 315: while(!RCIF);
  2516                           
  2517                           ;incstack = 0
  2518                           ; Regs used in _UART1_Read: [wreg]
  2519                           
  2520  053C  1283               	bcf	3,5	;RP0=0, select bank0
  2521  053D  1303               	bcf	3,6	;RP1=0, select bank0
  2522  053E  1E8C               	btfss	12,5	;volatile
  2523  053F  2D3C               	goto	i1l201
  2524                           
  2525                           ;pic16f87xa.c: 316: return RCREG;
  2526  0540  081A               	movf	26,w	;volatile
  2527  0541  0008               	return
  2528  0542                     __end_of_UART1_Read:	
  2529                           
  2530                           	psect	text13
  2531  0542                     __ptext13:	
  2532 ;; *************** function _UART1_Data_Ready *****************
  2533 ;; Defined at:
  2534 ;;		line 308 in file "pic16f87xa.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;		None
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      unsigned char 
  2541 ;; Registers used:
  2542 ;;		wreg
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2548 ;;      Params:         0       0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0
  2551 ;;      Totals:         0       0       0       0       0
  2552 ;;Total ram usage:        0 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; This function calls:
  2555 ;;		Nothing
  2556 ;; This function is called by:
  2557 ;;		_ISR
  2558 ;;		_UART1_Read_String
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           
  2563                           ;psect for function _UART1_Data_Ready
  2564  0542                     _UART1_Data_Ready:	
  2565                           
  2566                           ;pic16f87xa.c: 310: return RCIF;
  2567                           
  2568                           ;incstack = 0
  2569                           ; Regs used in _UART1_Data_Ready: [wreg]
  2570  0542  3000               	movlw	0
  2571  0543  1283               	bcf	3,5	;RP0=0, select bank0
  2572  0544  1303               	bcf	3,6	;RP1=0, select bank0
  2573  0545  1A8C               	btfsc	12,5	;volatile
  2574  0546  3001               	movlw	1
  2575  0547  0008               	return
  2576  0548                     __end_of_UART1_Data_Ready:	
  2577  007E                     btemp	set	126	;btemp
  2578  007E                     wtemp0	set	126


Data Sizes:
    Strings     73
    Constant    0
    Data        96
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     15      79
    BANK1            80      3      71
    BANK3            96      0      64
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_String@c	PTR unsigned char  size(1) Largest target is 15
		 -> STR_18(CODE[15]), STR_17(CODE[9]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 8
		 -> STR_23(CODE[8]), STR_22(CODE[5]), STR_21(CODE[4]), STR_20(CODE[5]), 
		 -> STR_19(CODE[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3058
                                              0 BANK1      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                         _Lcd_String
                   _Lcd_Write_String
                         _UART1_Init
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (1) _UART1_Write                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     534
                                              5 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_String                                          10     8      2    1189
                                              5 BANK0     10     8      2
                            _Lcd_Cmd
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     870
                                              4 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
                   _UART1_Data_Ready
                         _UART1_Read
 ---------------------------------------------------------------------------------
 (5) _UART1_Read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _UART1_Data_Ready                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_String
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART1_Init
   _UART1_Write

 _ISR (ROOT)
   _UART1_Data_Ready
   _UART1_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      40       9       66.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      3      47       7       88.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      E0      12        0.0%
ABS                  0      0      E0       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 09 12:23:33 2018

                        _a 0074                          _i 0072                          _j 0070  
                        _k 005C                          _n 0055                          pc 0002  
              __CFG_CP$OFF 0000                         _AT 0045                         l97 04DE  
                       l98 04DF                         l99 04E3                         _a1 002B  
                       _a2 0020                         _a3 00D9                         _a4 00CE  
                       fsr 0004                        l100 04E4                        l101 04E8  
                      l102 04E9                        l103 04ED                        l156 0508  
                      _GIE 005F                        _RB1 0031                        _RB2 0032  
                      _RD0 0040                        _RD1 0041                        _RD2 0042  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047               __CFG_CPD$OFF 0000                        _ISR 03E9  
                      _RX9 00C6                        _TX9 04C6                        fsr0 0004  
                      indf 0000               __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000  
                     ?_ISR 0075                       l3104 013F                       l3132 01C3  
                     l3118 0181                       l3064 00A3                       l2602 01FB  
                     l3090 0107                       l2612 0225                       l2618 0229  
                     l2564 0382                       l2590 0454                       STR_1 032B  
                     STR_7 031F                       _BRGH 04C2                       _CREN 00C4  
                     u2015 0209                       u2607 017A                       u2617 01BC  
                     u2627 01E0                       u1925 03BD                       u2637 0514  
                     u2647 03CF                       u2567 009A                       u1945 0367  
                     u2657 03E2                       u2577 00C2                       u2667 0256  
                     u2587 0100                       _PEIE 005E                       u2677 0266  
                     u1965 0390                       u2597 0138                       u2687 0277  
                     u2697 04CE                       u1995 01F5                       _RCIE 0465  
                     _RCIF 0065                       _OERR 00C1                       _SPEN 00C7  
                     _TRMT 04C1                       _TXEN 04C5                       _SYNC 04C4  
             __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0075                       _main 005F  
                     _rfid 0048                       _rgps 0073                       btemp 007E  
         _UART1_Data_Ready 0542                       start 0012         ??_Lcd_Write_String 0065  
          __end_of_Lcd_Cmd 04D7                ?_UART1_Init 0075                ?_UART1_Read 0075  
                    ??_ISR 0075                 _Lcd_String 01E7                      ?_main 0075  
                    STR_20 0346                      STR_21 0355                      STR_22 0350  
                    STR_23 033E                      STR_17 0335              __CFG_WDTE$OFF 0000  
                    STR_18 0310                      STR_19 034B                      i1l201 053C  
                    i1l406 03E9                      _RCREG 001A                      _RCSTA 0018  
                    _SPBRG 0099                      _PORTD 0008    __size_of_Lcd_Set_Cursor 0052  
                    _TRISD 0088                      _TXREG 0019                      _TXSTA 0098  
                    _param 0190             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 02AB  
         __end_of_Lcd_Port 04EF            __initialization 0015               __end_of_main 01E7  
             ?_UART1_Write 0075                     ??_main 00E4         __size_of_Lcd_Clear 000B  
                   _ADCON0 001F                     _ADCON1 009F                     _ADRESH 001E  
                   _ADRESL 009E        __size_of_UART1_Init 0023        __size_of_UART1_Read 0006  
                   i1l2502 0410                     i1l2504 0414                     i1l2494 03F4  
                ??_Lcd_Cmd 0061    __size_of_Lcd_Write_Char 003E                     _TRISB1 0431  
                   _TRISB2 0432                     _TRISC6 043E                     _TRISC7 043F  
           __CFG_PWRTE$OFF 0000                     _noecho 0040                ?_Lcd_String 0065  
                   saved_w 007E            Lcd_Set_Cursor@a 0067            Lcd_Set_Cursor@b 0064  
          Lcd_Set_Cursor@y 0069            Lcd_Set_Cursor@z 0068    __end_of__initialization 005B  
        __end_of_Lcd_Clear 0534             __pcstackCOMMON 0075               __pidataBANK0 0427  
             __pidataBANK1 04EF               __pidataBANK3 0498             Lcd_String@temp 006E  
           _Lcd_Set_Cursor 0359   __end_of_UART1_Data_Ready 0548                  ?_Lcd_Init 0075  
                ?_Lcd_Port 0075                 __pbssBANK0 0048                 __pbssBANK1 00A0  
               __pbssBANK3 01B2        __size_of_Lcd_String 0063                 __pmaintext 005F  
             ??_UART1_Init 0060               ??_UART1_Read 0075                 __pintentry 0004  
__size_of_Lcd_Write_String 0026     __end_of_Lcd_Set_Cursor 03AB       __size_of_UART1_Write 0013  
          UART1_Write@data 0061                 ??_Lcd_Init 0064                 ??_Lcd_Port 0060  
               __stringtab 0300         __end_of_UART1_Init 0498         __end_of_UART1_Read 0542  
           _Lcd_Write_Char 03AB                    _Lcd_Cmd 04BA            ?_Lcd_Set_Cursor 0064  
                  __ptext1 0505                    __ptext2 0475                    __ptext3 044F  
                  __ptext4 01E7                    __ptext5 03AB                    __ptext6 0359  
                  __ptext7 024A                    __ptext8 0529                    __ptext9 04BA  
             __size_of_ISR 003E                    clrloop0 0535     __end_of_Lcd_Write_Char 03E9  
     end_of_initialization 005B                  Lcd_Port@a 0060               ??_Lcd_String 0067  
          ?_Lcd_Write_Char 0075          Lcd_Write_String@a 0067          Lcd_Write_String@i 0065  
       __end_of_Lcd_String 024A                  _Lcd_Clear 0529           _Lcd_Write_String 044F  
      start_initialization 0015          ?_UART1_Data_Ready 0075                __end_of_ISR 0427  
       ??_UART1_Data_Ready 0075          __size_of_Lcd_Init 0061          __size_of_Lcd_Port 0018  
               ?_Lcd_Clear 0075                 init_fetch0 0518                __pdataBANK0 0020  
              __pdataBANK1 00CE                __pdataBANK3 0190            Lcd_Write_Char@a 0064  
          Lcd_Write_Char@y 0063                __pbssCOMMON 0070                  ___latbits 0002  
            __pcstackBANK0 0060              __pcstackBANK1 00E4                   ?_Lcd_Cmd 0075  
                _char_mode 01A3           ??_Lcd_Set_Cursor 0065              ??_UART1_Write 0060  
                __pstrings 0300                  _lattitude 00A0                  _mode_text 0036  
        interrupt_function 0004                  clear_ram0 0534                  _longitude 01B2  
                 Lcd_Cmd@a 0063                   _GO_nDONE 00FA                ??_Lcd_Clear 0064  
              __stringbase 030F           ??_Lcd_Write_Char 0061        __end_of_UART1_Write 0518  
                 _Lcd_Init 024A                   _Lcd_Port 04D7   __end_of_Lcd_Write_String 0475  
         __size_of_Lcd_Cmd 001D         __end_of__stringtab 0310                   __ptext10 04D7  
                 __ptext11 03E9                   __ptext12 053C                   __ptext13 0542  
                 _gps_data 00AB                   _gps_flag 005E              __size_of_main 0188  
__size_of_UART1_Data_Ready 0006                _UART1_Write 0505                   init_ram0 051C  
       Lcd_Write_Char@temp 0062                Lcd_String@a 0069                Lcd_String@b 0065  
              Lcd_String@c 0066                Lcd_String@i 006A                Lcd_String@y 006D  
              Lcd_String@z 006C                   intlevel1 0000                  stringcode 030A  
               _UART1_Init 0475                 _UART1_Read 053C         Lcd_Set_Cursor@temp 006A  
                 stringdir 030A                   stringtab 0300  
